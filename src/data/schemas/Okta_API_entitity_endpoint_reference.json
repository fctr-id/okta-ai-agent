{
  "entity_summary": {
    "application": {
      "aliases": [
        "app",
        "integration",
        "client"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete",
        "activate",
        "deactivate",
        "assign_policy"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 8
    },
    "application_assignment": {
      "aliases": [
        "app assignment",
        "user app assignment",
        "group app assignment"
      ],
      "operations": [
        "list_group_assignments",
        "get_group_assignment",
        "assign_group",
        "update_group_assignment",
        "unassign_group",
        "list_user_assignments",
        "assign_user",
        "get_user_assignment",
        "update_user_assignment",
        "unassign_user"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "PATCH",
        "DELETE"
      ],
      "endpoint_count": 10
    },
    "application_connection": {
      "aliases": [
        "provisioning connection"
      ],
      "operations": [
        "get_default",
        "update_default",
        "get_jwks",
        "activate_default",
        "deactivate_default",
        "verify_oauth"
      ],
      "methods": [
        "GET",
        "POST"
      ],
      "endpoint_count": 6
    },
    "application_credential": {
      "aliases": [
        "app credential",
        "key",
        "secret",
        "certificate",
        "csr",
        "jwk"
      ],
      "operations": [
        "list_csrs",
        "create_csr",
        "get_csr",
        "revoke_csr",
        "publish_csr",
        "list_keys",
        "create_key",
        "get_key",
        "clone_key",
        "list_jwks",
        "create_jwk",
        "get_jwk",
        "delete_jwk",
        "activate_jwk",
        "deactivate_jwk",
        "list_secrets",
        "create_secret",
        "get_secret",
        "delete_secret",
        "activate_secret",
        "deactivate_secret"
      ],
      "methods": [
        "GET",
        "POST",
        "DELETE"
      ],
      "endpoint_count": 21
    },
    "application_feature": {
      "aliases": [
        "app feature",
        "provisioning feature"
      ],
      "operations": [
        "list",
        "get",
        "update"
      ],
      "methods": [
        "GET",
        "PUT"
      ],
      "endpoint_count": 3
    },
    "application_federated_claim": {
      "aliases": [
        "federated claim",
        "token claim"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 5
    },
    "application_grant": {
      "aliases": [
        "app grant",
        "consent grant"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "delete"
      ],
      "methods": [
        "GET",
        "POST",
        "DELETE"
      ],
      "endpoint_count": 4
    },
    "application_logo": {
      "aliases": [
        "app logo",
        "icon"
      ],
      "operations": [
        "upload"
      ],
      "methods": [
        "POST"
      ],
      "endpoint_count": 1
    },
    "application_sso": {
      "aliases": [
        "sso settings",
        "saml metadata"
      ],
      "operations": [
        "get_saml_metadata"
      ],
      "methods": [
        "GET"
      ],
      "endpoint_count": 1
    },
    "application_token": {
      "aliases": [
        "app token",
        "refresh token"
      ],
      "operations": [
        "list",
        "revoke_all",
        "get",
        "revoke"
      ],
      "methods": [
        "GET",
        "DELETE"
      ],
      "endpoint_count": 4
    },
    "authenticator": {
      "aliases": [
        "mfa",
        "factor"
      ],
      "operations": [
        "get_well_known_config",
        "list",
        "create",
        "get",
        "replace",
        "activate",
        "deactivate",
        "list_methods",
        "get_method",
        "replace_method",
        "activate_method",
        "deactivate_method"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT"
      ],
      "endpoint_count": 12
    },
    "behavior_rule": {
      "aliases": [
        "behavior detection rule"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete",
        "activate",
        "deactivate"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 7
    },
    "custom_role": {
      "aliases": [
        "iam role"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete",
        "list_permissions",
        "get_permission",
        "add_permission",
        "replace_permission",
        "remove_permission"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 10
    },
    "device": {
      "aliases": [
        "devices",
        "endpoint"
      ],
      "operations": [
        "list",
        "get",
        "delete",
        "activate",
        "deactivate",
        "suspend",
        "unsuspend",
        "list_users"
      ],
      "methods": [
        "GET",
        "POST",
        "DELETE"
      ],
      "endpoint_count": 8
    },
    "device_assurance_policy": {
      "aliases": [
        "device trust policy"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 5
    },
    "device_integration": {
      "aliases": [
        "mdm integration"
      ],
      "operations": [
        "list",
        "get",
        "activate",
        "deactivate"
      ],
      "methods": [
        "GET",
        "POST"
      ],
      "endpoint_count": 4
    },
    "device_posture_check": {
      "aliases": [
        "device check"
      ],
      "operations": [
        "list",
        "create",
        "list_defaults",
        "get",
        "replace",
        "delete"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 6
    },
    "group": {
      "aliases": [
        "groups"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete",
        "list_assigned_apps",
        "list_members",
        "add_member",
        "remove_member"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 9
    },
    "group_owner": {
      "aliases": [
        "group ownership"
      ],
      "operations": [
        "list",
        "assign",
        "unassign"
      ],
      "methods": [
        "GET",
        "POST",
        "DELETE"
      ],
      "endpoint_count": 3
    },
    "group_rule": {
      "aliases": [
        "dynamic group"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete",
        "activate",
        "deactivate"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 7
    },
    "log_stream": {
      "aliases": [
        "log streaming"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete",
        "activate",
        "deactivate"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 7
    },
    "network_zone": {
      "aliases": [
        "zone",
        "ip zone"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete",
        "activate",
        "deactivate"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 7
    },
    "okta_application_settings": {
      "aliases": [
        "first party app settings"
      ],
      "operations": [
        "get",
        "replace"
      ],
      "methods": [
        "GET",
        "PUT"
      ],
      "endpoint_count": 2
    },
    "policy": {
      "aliases": [
        "policies",
        "sign on policy",
        "password policy",
        "mfa policy"
      ],
      "operations": [
        "list",
        "create",
        "simulate",
        "get",
        "replace",
        "delete",
        "list_apps",
        "clone",
        "activate",
        "deactivate",
        "list_resources",
        "map_resource",
        "get_resource_mapping",
        "delete_resource_mapping",
        "list_rules",
        "create_rule",
        "get_rule",
        "replace_rule",
        "delete_rule",
        "activate_rule",
        "deactivate_rule"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 21
    },
    "resource_set": {
      "aliases": [
        "iam resource set"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "replace",
        "delete",
        "list_resources",
        "add_resource",
        "get_resource",
        "replace_resource_conditions",
        "delete_resource",
        "list_bindings",
        "create_binding",
        "get_binding",
        "delete_binding",
        "list_binding_members",
        "add_binding_members",
        "get_binding_member",
        "remove_binding_member"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "PATCH",
        "DELETE"
      ],
      "endpoint_count": 18
    },
    "role_assignment": {
      "aliases": [
        "roles",
        "permissions",
        "admin role"
      ],
      "operations": [
        "list_users_with_roles",
        "list_by_user",
        "assign_to_user",
        "get_for_user",
        "unassign_from_user",
        "list_governance_sources_for_user_role",
        "get_governance_source_for_user_role",
        "list_governance_source_resources_for_user_role",
        "list_by_group",
        "assign_to_group",
        "get_for_group",
        "unassign_from_group",
        "list_by_client",
        "assign_to_client",
        "get_for_client",
        "unassign_from_client",
        "list_app_targets_for_user_role",
        "assign_all_apps_target_to_user_role",
        "assign_app_target_to_user_role",
        "unassign_app_target_from_user_role",
        "assign_app_instance_target_to_user_role",
        "unassign_app_instance_target_from_user_role",
        "list_group_targets_for_user_role",
        "assign_group_target_to_user_role",
        "unassign_group_target_from_user_role",
        "list_app_targets_for_group_role",
        "assign_app_target_to_group_role",
        "unassign_app_target_from_group_role",
        "assign_app_instance_target_to_group_role",
        "unassign_app_instance_target_from_group_role",
        "list_group_targets_for_group_role",
        "assign_group_target_to_group_role",
        "unassign_group_target_from_group_role",
        "list_app_targets_for_client_role",
        "assign_app_target_to_client_role",
        "unassign_app_target_from_client_role",
        "assign_app_instance_target_to_client_role",
        "unassign_app_instance_target_from_client_role",
        "list_group_targets_for_client_role",
        "assign_group_target_to_client_role",
        "unassign_group_target_from_client_role"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 41
    },
    "system_log": {
      "aliases": [
        "logs",
        "events",
        "audit trail"
      ],
      "operations": [
        "list_events"
      ],
      "methods": [
        "GET"
      ],
      "endpoint_count": 1
    },
    "user": {
      "aliases": [
        "users",
        "person",
        "account",
        "people"
      ],
      "operations": [
        "list",
        "create",
        "get",
        "update",
        "replace",
        "delete",
        "list_blocks",
        "list_app_links",
        "list_groups",
        "list_clients",
        "list_devices",
        "activate",
        "deactivate",
        "reactivate",
        "reset_factors",
        "suspend",
        "unlock",
        "unsuspend",
        "end_current_session",
        "revoke_all_sessions"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "endpoint_count": 20
    },
    "user_authenticator": {
      "aliases": [
        "user factor",
        "mfa enrollment"
      ],
      "operations": [
        "list_enrollments",
        "enroll_phone",
        "get_enrollment",
        "delete_enrollment",
        "list_yubikey_tokens",
        "upload_yubikey_seed",
        "get_yubikey_token",
        "list_factors",
        "enroll_factor",
        "list_supported_factors",
        "list_supported_security_questions",
        "get_factor",
        "unenroll_factor",
        "activate_factor",
        "resend_factor_enrollment",
        "get_factor_transaction_status",
        "verify_factor"
      ],
      "methods": [
        "GET",
        "POST",
        "DELETE"
      ],
      "endpoint_count": 17
    }
  },
  "endpoints": [
    {
      "id": "list-applications",
      "method": "GET",
      "url_pattern": "/api/v1/apps",
      "name": "List all applications",
      "entity": "application",
      "operation": "list",
      "description": "Lists all apps in the org with pagination. A subset of apps can be returned that match a supported filter expression or query. The results are [paginated](/#pagination) according to the `limit` parameter. If there are multiple pages of results, the header contains a `next` link. Treat the link as an opaque value (follow it, don't parse it).\n\n> **Note:** To list all of a member's assigned app links, use the [List all assigned app links endpoint in the User Resources API](/openapi/okta-management/management/tag/UserResources/#tag/UserResources/operation/listAppLinks).",
      "folder_path": "Applications",
      "parameters": {
        "required": [],
        "optional": [
          "q",
          "after",
          "useOptimization",
          "limit",
          "filter",
          "expand",
          "includeNonDeleted"
        ]
      }
    },
    {
      "id": "create-application",
      "method": "POST",
      "url_pattern": "/api/v1/apps",
      "name": "Create an application",
      "entity": "application",
      "operation": "create",
      "description": "Creates an app instance in your Okta org.\n\nYou can either create an OIN app instance or a custom app instance:\n* OIN app instances have prescribed `name` (key app definition) and `signOnMode` options. See the [OIN schemas](/openapi/okta-management/management/tag/Application/#tag/Application/schema/GoogleApplication) for the request body.\n* For custom app instances, select the [signOnMode](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication!path=0/signOnMode&t=request) that pertains to your app and specify the required parameters in the request body.\n",
      "folder_path": "Applications",
      "parameters": {
        "required": [],
        "optional": [
          "activate"
        ]
      }
    },
    {
      "id": "get-application",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId",
      "name": "Retrieve an application",
      "entity": "application",
      "operation": "get",
      "description": "Retrieves an application from your Okta organization by `id`",
      "folder_path": "Applications",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "replace-application",
      "method": "PUT",
      "url_pattern": "/api/v1/apps/:appId",
      "name": "Replace an application",
      "entity": "application",
      "operation": "replace",
      "description": "Replaces properties for an application\n> **Notes:**\n> * All required properties must be specified in the request body\n> * You can't modify system-assigned properties, such as `id`, `name`, `status`, `created`, and `lastUpdated`. The values for these properties in the PUT request body are ignored.\n",
      "folder_path": "Applications",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-application",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId",
      "name": "Delete an application",
      "entity": "application",
      "operation": "delete",
      "description": "Deletes an inactive application",
      "folder_path": "Applications",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-application",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/lifecycle/activate",
      "name": "Activate an application",
      "entity": "application",
      "operation": "activate",
      "description": "Activates an inactive application",
      "folder_path": "Applications",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-application",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/lifecycle/deactivate",
      "name": "Deactivate an application",
      "entity": "application",
      "operation": "deactivate",
      "description": "Deactivates an active application\n\n> **Note:** Deactivating an app triggers a full reconciliation of all users assigned to the app by groups. This reconcile process removes the app assignment for the deactivated app, and might also correct assignments that were supposed to be removed but failed previously.",
      "folder_path": "Applications",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-default-application-connection",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/connections/default",
      "name": "Retrieve the default provisioning connection",
      "entity": "application_connection",
      "operation": "get_default",
      "description": "Retrieves the default provisioning connection for an app",
      "folder_path": "Application Connections",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "update-default-application-connection",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/connections/default",
      "name": "Update the default provisioning connection",
      "entity": "application_connection",
      "operation": "update_default",
      "description": "Updates the default provisioning connection for an app",
      "folder_path": "Application Connections",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": [
          "activate"
        ]
      }
    },
    {
      "id": "get-application-connection-jwks",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/connections/default/jwks",
      "name": "Retrieve a JSON Web Key Set (JWKS) for the default provisioning connection",
      "entity": "application_connection",
      "operation": "get_jwks",
      "description": "Retrieves a JWKS for the default provisioning connection.  This can be used by the OAuth 2.0 app's `jwk_uri` property in the target org.",
      "folder_path": "Application Connections",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-default-application-connection",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/connections/default/lifecycle/activate",
      "name": "Activate the default provisioning connection",
      "entity": "application_connection",
      "operation": "activate_default",
      "description": "Activates the default provisioning connection for an app",
      "folder_path": "Application Connections",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-default-application-connection",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/connections/default/lifecycle/deactivate",
      "name": "Deactivate the default provisioning connection",
      "entity": "application_connection",
      "operation": "deactivate_default",
      "description": "Deactivates the default provisioning connection for an app",
      "folder_path": "Application Connections",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "verify-oauth-application-connection",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appName/:appId/oauth2/callback",
      "name": "Verify the provisioning connection",
      "entity": "application_connection",
      "operation": "verify_oauth",
      "description": "Verifies the OAuth 2.0-based connection as part of the OAuth 2.0 consent flow. The validation of the consent flow is the last step of the provisioning setup for an OAuth 2.0-based connection.\nCurrently, this operation only supports `office365`,`google`, `zoomus`, and `slack` apps.\n",
      "folder_path": "Application Connections",
      "parameters": {
        "required": [
          "appName",
          "appId"
        ],
        "optional": [
          "code",
          "state"
        ]
      }
    },
    {
      "id": "list-application-features",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/features",
      "name": "List all features",
      "entity": "application_feature",
      "operation": "list",
      "description": "Lists all features for an app\n> **Note:** This request returns an error if provisioning isn't enabled for the app.\n> To set up provisioning, see [Update the default provisioning connection](/openapi/okta-management/management/tag/ApplicationConnections/#tag/ApplicationConnections/operation/updateDefaultProvisioningConnectionForApplication).\n",
      "folder_path": "Application Features",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-feature",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/features/:featureName",
      "name": "Retrieve a feature",
      "entity": "application_feature",
      "operation": "get",
      "description": "Retrieves a Feature object for an app",
      "folder_path": "Application Features",
      "parameters": {
        "required": [
          "appId",
          "featureName"
        ],
        "optional": []
      }
    },
    {
      "id": "update-application-feature",
      "method": "PUT",
      "url_pattern": "/api/v1/apps/:appId/features/:featureName",
      "name": "Update a feature",
      "entity": "application_feature",
      "operation": "update",
      "description": "Updates a Feature object for an app\n> **Note:** This endpoint supports partial updates.\n",
      "folder_path": "Application Features",
      "parameters": {
        "required": [
          "appId",
          "featureName"
        ],
        "optional": []
      }
    },
    {
      "id": "list-application-grants",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/grants",
      "name": "List all app grants",
      "entity": "application_grant",
      "operation": "list",
      "description": "Lists all scope consent Grants for the app",
      "folder_path": "Application Grants",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "create-application-grant",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/grants",
      "name": "Grant consent to scope",
      "entity": "application_grant",
      "operation": "create",
      "description": "Grants consent for the app to request an OAuth 2.0 Okta scope",
      "folder_path": "Application Grants",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-grant",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/grants/:grantId",
      "name": "Retrieve an app grant",
      "entity": "application_grant",
      "operation": "get",
      "description": "Retrieves a single scope consent Grant object for the app",
      "folder_path": "Application Grants",
      "parameters": {
        "required": [
          "appId",
          "grantId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "delete-application-grant",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId/grants/:grantId",
      "name": "Revoke an app grant",
      "entity": "application_grant",
      "operation": "delete",
      "description": "Revokes permission for the app to grant the given scope",
      "folder_path": "Application Grants",
      "parameters": {
        "required": [
          "appId",
          "grantId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-application-group-assignments",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/groups",
      "name": "List all application groups",
      "entity": "application_assignment",
      "operation": "list_group_assignments",
      "description": "Lists all app group assignments",
      "folder_path": "Application Groups",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": [
          "q",
          "after",
          "limit",
          "expand"
        ]
      }
    },
    {
      "id": "get-application-group-assignment",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/groups/:groupId",
      "name": "Retrieve an application group",
      "entity": "application_assignment",
      "operation": "get_group_assignment",
      "description": "Retrieves an app group assignment",
      "folder_path": "Application Groups",
      "parameters": {
        "required": [
          "appId",
          "groupId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "create-or-update-application-group-assignment",
      "method": "PUT",
      "url_pattern": "/api/v1/apps/:appId/groups/:groupId",
      "name": "Assign an application group",
      "entity": "application_assignment",
      "operation": "assign_group",
      "description": "Assigns a [Group](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/) to an app, which in turn assigns the app to each [User](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/) that belongs to the group. \nThe resulting application user [scope](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationUsers/#tag/ApplicationUsers/operation/listApplicationUsers!c=200&path=scope&t=response) is `GROUP` since the assignment was from the group membership.",
      "folder_path": "Application Groups",
      "parameters": {
        "required": [
          "appId",
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "update-application-group-assignment",
      "method": "PATCH",
      "url_pattern": "/api/v1/apps/:appId/groups/:groupId",
      "name": "Update an application group",
      "entity": "application_assignment",
      "operation": "update_group_assignment",
      "description": "Updates a group assignment to an app",
      "folder_path": "Application Groups",
      "parameters": {
        "required": [
          "appId",
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-group-from-application",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId/groups/:groupId",
      "name": "Unassign an application group",
      "entity": "application_assignment",
      "operation": "unassign_group",
      "description": "Unassigns a Group from an app",
      "folder_path": "Application Groups",
      "parameters": {
        "required": [
          "appId",
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "upload-application-logo",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/logo",
      "name": "Upload an application logo",
      "entity": "application_logo",
      "operation": "upload",
      "description": "Uploads a logo for the app instance.\nIf the app already has a logo, this operation replaces the previous logo.\n\nThe logo is visible in the Admin Console as an icon for your app instance.\nIf you have one `appLink` object configured, this logo also appears in the End-User Dashboard as an icon for your app.\n> **Note:** If you have multiple `appLink` objects, use the Admin Console to add logos for each app link.\n> You can't use the API to add logos for multiple app links.\n",
      "folder_path": "Application Logos",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "assign-policy-to-application",
      "method": "PUT",
      "url_pattern": "/api/v1/apps/:appId/policies/:policyId",
      "name": "Assign an authentication policy",
      "entity": "application",
      "operation": "assign_policy",
      "description": "Assigns an app to an [authentication policy](/openapi/okta-management/management/tag/Policy/), identified by `policyId`.\nIf the app was previously assigned to another policy, this operation replaces that assignment with the updated policy identified by `policyId`.\n\n> **Note:** When you [merge duplicate authentication policies](https://help.okta.com/okta_help.htm?type=oie&id=ext-merge-auth-policies),\nthe policy and mapping CRUD operations may be unavailable during the consolidation. When the consolidation is complete, you receive an email with merged results.",
      "folder_path": "Application Policies",
      "parameters": {
        "required": [
          "appId",
          "policyId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-saml-metadata",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/sso/saml/metadata",
      "name": "Preview the application SAML metadata",
      "entity": "application_sso",
      "operation": "get_saml_metadata",
      "description": "Previews the SSO SAML metadata for an application",
      "folder_path": "Application SSO",
      "parameters": {
        "required": [
          "appId",
          "kid"
        ],
        "optional": []
      }
    },
    {
      "id": "list-application-csrs",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/credentials/csrs",
      "name": "List all certificate signing requests",
      "entity": "application_credential",
      "operation": "list_csrs",
      "description": "Lists all Certificate Signing Requests for an application",
      "folder_path": "Application Key Credentials",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "create-application-csr",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/csrs",
      "name": "Generate a certificate signing request",
      "entity": "application_credential",
      "operation": "create_csr",
      "description": "Generates a new key pair and returns the Certificate Signing Request(CSR) for it. The information in a CSR is used by the Certificate Authority (CA) to verify and create your certificate. It also contains the public key that is included in your certificate.\n\nReturns CSR in `pkcs#10` format if the `Accept` media type is `application/pkcs10` or a CSR object if the `Accept` media type is `application/json`.\n> **Note:** The key pair isn't listed in the Key Credentials for the app until it's published.",
      "folder_path": "Application Key Credentials",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-csr",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/credentials/csrs/:csrId",
      "name": "Retrieve a certificate signing request",
      "entity": "application_credential",
      "operation": "get_csr",
      "description": "Retrieves a Certificate Signing Request (CSR) for the app by `csrId`.\n\nReturns a Base64-encoded CSR in DER format if the `Accept` media type is `application/pkcs10` or a CSR object if the `Accept` media type is `application/json`.",
      "folder_path": "Application Key Credentials",
      "parameters": {
        "required": [
          "appId",
          "csrId"
        ],
        "optional": []
      }
    },
    {
      "id": "revoke-application-csr",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId/credentials/csrs/:csrId",
      "name": "Revoke a certificate signing request",
      "entity": "application_credential",
      "operation": "revoke_csr",
      "description": "Revokes a Certificate Signing Request and deletes the key pair from the app",
      "folder_path": "Application Key Credentials",
      "parameters": {
        "required": [
          "appId",
          "csrId"
        ],
        "optional": []
      }
    },
    {
      "id": "publish-application-csr",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/csrs/:csrId/lifecycle/publish",
      "name": "Publish a certificate signing request",
      "entity": "application_credential",
      "operation": "publish_csr",
      "description": "Publishes a Certificate Signing Request (CSR) for the app with a signed X.509 certificate and adds it into the Application Key Credentials.\n> **Note:** Publishing a certificate completes the lifecycle of the CSR and it's no longer accessible.",
      "folder_path": "Application Key Credentials",
      "parameters": {
        "required": [
          "appId",
          "csrId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-application-keys",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/credentials/keys",
      "name": "List all key credentials",
      "entity": "application_credential",
      "operation": "list_keys",
      "description": "Lists all key credentials for an app",
      "folder_path": "Application Key Credentials",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "create-application-key",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/keys/generate",
      "name": "Generate a key credential",
      "entity": "application_credential",
      "operation": "create_key",
      "description": "Generates a new X.509 certificate for an app key credential\n> **Note:** To update an Application with the newly generated key credential, use the [Replace an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/replaceApplication) request with the new [credentials.signing.kid](/openapi/okta-management/management/tag/Application/#tag/Application/operation/replaceApplication!path=4/credentials/signing/kid&t=request) value in the request body. You can provide just the [Signing Credential object](/openapi/okta-management/management/tag/Application/#tag/Application/operation/replaceApplication!path=4/credentials/signing&t=request) instead of the entire [Application Credential object](/openapi/okta-management/management/tag/Application/#tag/Application/operation/replaceApplication!path=4/credentials&t=request).",
      "folder_path": "Application Key Credentials",
      "parameters": {
        "required": [
          "appId",
          "validityYears"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-key",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/credentials/keys/:keyId",
      "name": "Retrieve a key credential",
      "entity": "application_credential",
      "operation": "get_key",
      "description": "Retrieves a specific Application Key Credential by `kid`",
      "folder_path": "Application Key Credentials",
      "parameters": {
        "required": [
          "appId",
          "keyId"
        ],
        "optional": []
      }
    },
    {
      "id": "clone-application-key",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/keys/:keyId/clone",
      "name": "Clone a key credential",
      "entity": "application_credential",
      "operation": "clone_key",
      "description": "Clones an X.509 certificate for an Application Key Credential from a source app to a target app.\n\nFor step-by-step instructions to clone a credential, see [Share application key credentials for IdPs across apps](https://developer.okta.com/docs/guides/sharing-cert/main/).\n> **Note:** Sharing certificates isn't a recommended security practice.",
      "folder_path": "Application Key Credentials",
      "parameters": {
        "required": [
          "appId",
          "keyId",
          "targetAid"
        ],
        "optional": []
      }
    },
    {
      "id": "list-application-jwks",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/credentials/jwks",
      "name": "List all the OAuth 2.0 client JSON Web Keys",
      "entity": "application_credential",
      "operation": "list_jwks",
      "description": "Lists all JSON Web Keys for an OAuth 2.0 client app",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "create-application-jwk",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/jwks",
      "name": "Add a JSON Web Key",
      "entity": "application_credential",
      "operation": "create_jwk",
      "description": "Adds a new JSON Web Key to the client`s JSON Web Keys.\n> **Note:** This API doesn't allow you to add a key if the existing key doesn't have a `kid`. This is also consistent with how the [Dynamic Client Registration](/openapi/okta-oauth/oauth/tag/Client/) or [Applications](/openapi/okta-management/management/tag/Application/) APIs behave, as they don't allow the creation of multiple keys without `kids`. Use the [Replace an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/replaceApplication) or the [Replace a Client Application](/openapi/okta-oauth/oauth/tag/Client/#tag/Client/operation/replaceClient) operation to update the JWKS or [Delete an OAuth 2.0 Client JSON Web Key](/openapi/okta-management/management/tag/ApplicationSSOCredentialOAuth2ClientAuth/#tag/ApplicationSSOCredentialOAuth2ClientAuth/operation/deletejwk) and re-add the key with a `kid`.",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-jwk",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/credentials/jwks/:keyId",
      "name": "Retrieve an OAuth 2.0 client JSON Web Key",
      "entity": "application_credential",
      "operation": "get_jwk",
      "description": "Retrieves an OAuth 2.0 Client JSON Web Key by `keyId`.",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId",
          "keyId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-application-jwk",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId/credentials/jwks/:keyId",
      "name": "Delete an OAuth 2.0 client JSON Web Key",
      "entity": "application_credential",
      "operation": "delete_jwk",
      "description": "Deletes an OAuth 2.0 Client JSON Web Key by `keyId`. You can only delete an inactive key.",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId",
          "keyId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-application-jwk",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/jwks/:keyId/lifecycle/activate",
      "name": "Activate an OAuth 2.0 client JSON Web Key",
      "entity": "application_credential",
      "operation": "activate_jwk",
      "description": "Activates an OAuth 2.0 Client JSON Web Key by `keyId`",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId",
          "keyId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-application-jwk",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/jwks/:keyId/lifecycle/deactivate",
      "name": "Deactivate an OAuth 2.0 client JSON Web Key",
      "entity": "application_credential",
      "operation": "deactivate_jwk",
      "description": "Deactivates an OAuth 2.0 Client JSON Web Key by `keyId`.",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId",
          "keyId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-application-secrets",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/credentials/secrets",
      "name": "List all OAuth 2.0 client secrets",
      "entity": "application_credential",
      "operation": "list_secrets",
      "description": "Lists all client secrets for an OAuth 2.0 client app",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "create-application-secret",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/secrets",
      "name": "Create an OAuth 2.0 client secret",
      "entity": "application_credential",
      "operation": "create_secret",
      "description": "Creates an OAuth 2.0 Client Secret object with a new active client secret. You can create up to two Secret objects. An error is returned if you attempt to create more than two Secret objects.\n> **Note:** This API lets you bring your own secret. If [token_endpoint_auth_method](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication!path=4/credentials/oauthClient/token_endpoint_auth_method&t=request) of the app is `client_secret_jwt`, then the minimum length of `client_secret` is 32 characters. If no secret is specified in the request, Okta adds a new system-generated secret.",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-secret",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/credentials/secrets/:secretId",
      "name": "Retrieve an OAuth 2.0 client secret",
      "entity": "application_credential",
      "operation": "get_secret",
      "description": "Retrieves an OAuth 2.0 Client Secret by `secretId`",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId",
          "secretId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-application-secret",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId/credentials/secrets/:secretId",
      "name": "Delete an OAuth 2.0 client secret",
      "entity": "application_credential",
      "operation": "delete_secret",
      "description": "Deletes an OAuth 2.0 Client Secret by `secretId`. You can only delete an inactive Secret.",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId",
          "secretId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-application-secret",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/secrets/:secretId/lifecycle/activate",
      "name": "Activate an OAuth 2.0 client secret",
      "entity": "application_credential",
      "operation": "activate_secret",
      "description": "Activates an OAuth 2.0 Client Secret by `secretId`",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId",
          "secretId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-application-secret",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/credentials/secrets/:secretId/lifecycle/deactivate",
      "name": "Deactivate an OAuth 2.0 client secret",
      "entity": "application_credential",
      "operation": "deactivate_secret",
      "description": "Deactivates an OAuth 2.0 Client Secret by `secretId`. You can't deactivate a secret if it's the only secret of the client.",
      "folder_path": "Application Client Auth Credentials",
      "parameters": {
        "required": [
          "appId",
          "secretId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-application-federated-claims",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/federated-claims",
      "name": "List all configured federated claims",
      "entity": "application_federated_claim",
      "operation": "list",
      "description": "Lists all federated claims for your app",
      "folder_path": "Application Federated Claims",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "create-application-federated-claim",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/federated-claims",
      "name": "Create a federated claim",
      "entity": "application_federated_claim",
      "operation": "create",
      "description": "Creates a claim that will be included in tokens produced by federation protocols (for example: OIDC `id_tokens` or SAML Assertions)",
      "folder_path": "Application Federated Claims",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-federated-claim",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/federated-claims/:claimId",
      "name": "Retrieve a federated claim",
      "entity": "application_federated_claim",
      "operation": "get",
      "description": "Retrieves a federated claim by `claimId`",
      "folder_path": "Application Federated Claims",
      "parameters": {
        "required": [
          "appId",
          "claimId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-application-federated-claim",
      "method": "PUT",
      "url_pattern": "/api/v1/apps/:appId/federated-claims/:claimId",
      "name": "Replace a federated claim",
      "entity": "application_federated_claim",
      "operation": "replace",
      "description": "Replaces a claim that will be included in tokens produced by federation protocols (for example: OIDC `id_tokens` or SAML Assertions)",
      "folder_path": "Application Federated Claims",
      "parameters": {
        "required": [
          "appId",
          "claimId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-application-federated-claim",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId/federated-claims/:claimId",
      "name": "Delete a federated claim",
      "entity": "application_federated_claim",
      "operation": "delete",
      "description": "Deletes a federated claim by `claimId`",
      "folder_path": "Application Federated Claims",
      "parameters": {
        "required": [
          "appId",
          "claimId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-application-tokens",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/tokens",
      "name": "List all application refresh tokens",
      "entity": "application_token",
      "operation": "list",
      "description": "Lists all refresh tokens for an app\n\n> **Note:** The results are [paginated](/#pagination) according to the `limit` parameter.\n> If there are multiple pages of results, the Link header contains a `next` link that you need to use as an opaque value (follow it, don't parse it).\n",
      "folder_path": "Application Tokens",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": [
          "expand",
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "revoke-all-application-tokens",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId/tokens",
      "name": "Revoke all application tokens",
      "entity": "application_token",
      "operation": "revoke_all",
      "description": "Revokes all OAuth 2.0 refresh tokens for the specified app. Any access tokens issued with these refresh tokens are also revoked, but access tokens issued without a refresh token aren't affected.",
      "folder_path": "Application Tokens",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-token",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/tokens/:tokenId",
      "name": "Retrieve an application token",
      "entity": "application_token",
      "operation": "get",
      "description": "Retrieves a refresh token for the specified app",
      "folder_path": "Application Tokens",
      "parameters": {
        "required": [
          "appId",
          "tokenId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "revoke-application-token",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId/tokens/:tokenId",
      "name": "Revoke an application token",
      "entity": "application_token",
      "operation": "revoke",
      "description": "Revokes the specified token for the specified app",
      "folder_path": "Application Tokens",
      "parameters": {
        "required": [
          "appId",
          "tokenId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-application-user-assignments",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/users",
      "name": "List all application users",
      "entity": "application_assignment",
      "operation": "list_user_assignments",
      "description": "Lists all assigned users for an app",
      "folder_path": "Application Users",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": [
          "after",
          "limit",
          "q",
          "expand"
        ]
      }
    },
    {
      "id": "assign-user-to-application",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/users",
      "name": "Assign an application user",
      "entity": "application_assignment",
      "operation": "assign_user",
      "description": "Assigns a user to an app for:\n\n  * SSO only<br>\n    Assignments to SSO apps typically don't include a user profile.\n    However, if your SSO app requires a profile but doesn't have provisioning enabled, you can add profile attributes in the request body.\n\n  * SSO and provisioning<br>\n    Assignments to SSO and provisioning apps typically include credentials and an app-specific profile.\n    Profile mappings defined for the app are applied first before applying any profile properties that are specified in the request body.\n    > **Notes:**\n    > * When Universal Directory is enabled, you can only specify profile properties that aren't defined in profile mappings.\n    > * Omit mapped properties during assignment to minimize assignment errors.",
      "folder_path": "Application Users",
      "parameters": {
        "required": [
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-application-user-assignment",
      "method": "GET",
      "url_pattern": "/api/v1/apps/:appId/users/:userId",
      "name": "Retrieve an application user",
      "entity": "application_assignment",
      "operation": "get_user_assignment",
      "description": "Retrieves a specific user assignment for a specific app",
      "folder_path": "Application Users",
      "parameters": {
        "required": [
          "appId",
          "userId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "update-application-user-assignment",
      "method": "POST",
      "url_pattern": "/api/v1/apps/:appId/users/:userId",
      "name": "Update an application user",
      "entity": "application_assignment",
      "operation": "update_user_assignment",
      "description": "Updates the profile or credentials of a user assigned to an app",
      "folder_path": "Application Users",
      "parameters": {
        "required": [
          "appId",
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-user-from-application",
      "method": "DELETE",
      "url_pattern": "/api/v1/apps/:appId/users/:userId",
      "name": "Unassign an application user",
      "entity": "application_assignment",
      "operation": "unassign_user",
      "description": "Unassigns a user from an app\n\nFor directories like Active Directory and LDAP, they act as the owner of the user's credential with Okta delegating authentication (DelAuth) to that directory.\nIf this request is successful for a user when DelAuth is enabled, then the user is in a state with no password. You can then reset the user's password.\n\n> **Important:** This is a destructive operation. You can't recover the user's app profile. If the app is enabled for provisioning and configured to deactivate users, the user is also deactivated in the target app.",
      "folder_path": "Application Users",
      "parameters": {
        "required": [
          "appId",
          "userId"
        ],
        "optional": [
          "sendEmail"
        ]
      }
    },
    {
      "id": "get-authenticator-well-known-config",
      "method": "GET",
      "url_pattern": "/.well-known/app-authenticator-configuration",
      "name": "Retrieve the well-known app authenticator configuration",
      "entity": "authenticator",
      "operation": "get_well_known_config",
      "description": "Retrieves the well-known app authenticator configuration. Includes an app authenticator's settings, supported methods, and other details.",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "oauthClientId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-authenticators",
      "method": "GET",
      "url_pattern": "/api/v1/authenticators",
      "name": "List all authenticators",
      "entity": "authenticator",
      "operation": "list",
      "description": "Lists all authenticators",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "create-authenticator",
      "method": "POST",
      "url_pattern": "/api/v1/authenticators",
      "name": "Create an authenticator",
      "entity": "authenticator",
      "operation": "create",
      "description": "Creates an authenticator",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [],
        "optional": [
          "activate"
        ]
      }
    },
    {
      "id": "get-authenticator",
      "method": "GET",
      "url_pattern": "/api/v1/authenticators/:authenticatorId",
      "name": "Retrieve an authenticator",
      "entity": "authenticator",
      "operation": "get",
      "description": "Retrieves an authenticator from your Okta organization by `authenticatorId`",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "authenticatorId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-authenticator",
      "method": "PUT",
      "url_pattern": "/api/v1/authenticators/:authenticatorId",
      "name": "Replace an authenticator",
      "entity": "authenticator",
      "operation": "replace",
      "description": "Replaces the properties for an authenticator identified by `authenticatorId`",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "authenticatorId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-authenticator",
      "method": "POST",
      "url_pattern": "/api/v1/authenticators/:authenticatorId/lifecycle/activate",
      "name": "Activate an authenticator",
      "entity": "authenticator",
      "operation": "activate",
      "description": "Activates an authenticator by `authenticatorId`",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "authenticatorId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-authenticator",
      "method": "POST",
      "url_pattern": "/api/v1/authenticators/:authenticatorId/lifecycle/deactivate",
      "name": "Deactivate an authenticator",
      "entity": "authenticator",
      "operation": "deactivate",
      "description": "Deactivates an authenticator by `authenticatorId`",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "authenticatorId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-authenticator-methods",
      "method": "GET",
      "url_pattern": "/api/v1/authenticators/:authenticatorId/methods",
      "name": "List all methods of an authenticator",
      "entity": "authenticator",
      "operation": "list_methods",
      "description": "Lists all methods of an authenticator identified by `authenticatorId`",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "authenticatorId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-authenticator-method",
      "method": "GET",
      "url_pattern": "/api/v1/authenticators/:authenticatorId/methods/:methodType",
      "name": "Retrieve an authenticator method",
      "entity": "authenticator",
      "operation": "get_method",
      "description": "Retrieves a method identified by `methodType` of an authenticator identified by `authenticatorId`",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "authenticatorId",
          "methodType"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-authenticator-method",
      "method": "PUT",
      "url_pattern": "/api/v1/authenticators/:authenticatorId/methods/:methodType",
      "name": "Replace an authenticator method",
      "entity": "authenticator",
      "operation": "replace_method",
      "description": "Replaces a method of `methodType` for an authenticator identified by `authenticatorId`",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "authenticatorId",
          "methodType"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-authenticator-method",
      "method": "POST",
      "url_pattern": "/api/v1/authenticators/:authenticatorId/methods/:methodType/lifecycle/activate",
      "name": "Activate an authenticator method",
      "entity": "authenticator",
      "operation": "activate_method",
      "description": "Activates a method for an authenticator identified by `authenticatorId` and `methodType`",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "authenticatorId",
          "methodType"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-authenticator-method",
      "method": "POST",
      "url_pattern": "/api/v1/authenticators/:authenticatorId/methods/:methodType/lifecycle/deactivate",
      "name": "Deactivate an authenticator method",
      "entity": "authenticator",
      "operation": "deactivate_method",
      "description": "Deactivates a method for an authenticator identified by `authenticatorId` and `methodType`",
      "folder_path": "Authenticators",
      "parameters": {
        "required": [
          "authenticatorId",
          "methodType"
        ],
        "optional": []
      }
    },
    {
      "id": "list-behavior-rules",
      "method": "GET",
      "url_pattern": "/api/v1/behaviors",
      "name": "List all behavior detection rules",
      "entity": "behavior_rule",
      "operation": "list",
      "description": "Lists all behavior detection rules with pagination support",
      "folder_path": "Behavior Rules",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "create-behavior-rule",
      "method": "POST",
      "url_pattern": "/api/v1/behaviors",
      "name": "Create a behavior detection rule",
      "entity": "behavior_rule",
      "operation": "create",
      "description": "Creates a new behavior detection rule",
      "folder_path": "Behavior Rules",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-behavior-rule",
      "method": "GET",
      "url_pattern": "/api/v1/behaviors/:behaviorId",
      "name": "Retrieve a behavior detection rule",
      "entity": "behavior_rule",
      "operation": "get",
      "description": "Retrieves a Behavior Detection Rule by `behaviorId`",
      "folder_path": "Behavior Rules",
      "parameters": {
        "required": [
          "behaviorId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-behavior-rule",
      "method": "PUT",
      "url_pattern": "/api/v1/behaviors/:behaviorId",
      "name": "Replace a behavior detection rule",
      "entity": "behavior_rule",
      "operation": "replace",
      "description": "Replaces a Behavior Detection Rule by `behaviorId`",
      "folder_path": "Behavior Rules",
      "parameters": {
        "required": [
          "behaviorId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-behavior-rule",
      "method": "DELETE",
      "url_pattern": "/api/v1/behaviors/:behaviorId",
      "name": "Delete a behavior detection rule",
      "entity": "behavior_rule",
      "operation": "delete",
      "description": "Deletes a Behavior Detection Rule by `behaviorId`",
      "folder_path": "Behavior Rules",
      "parameters": {
        "required": [
          "behaviorId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-behavior-rule",
      "method": "POST",
      "url_pattern": "/api/v1/behaviors/:behaviorId/lifecycle/activate",
      "name": "Activate a behavior detection rule",
      "entity": "behavior_rule",
      "operation": "activate",
      "description": "Activates a behavior detection rule",
      "folder_path": "Behavior Rules",
      "parameters": {
        "required": [
          "behaviorId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-behavior-rule",
      "method": "POST",
      "url_pattern": "/api/v1/behaviors/:behaviorId/lifecycle/deactivate",
      "name": "Deactivate a behavior detection rule",
      "entity": "behavior_rule",
      "operation": "deactivate",
      "description": "Deactivates a behavior detection rule",
      "folder_path": "Behavior Rules",
      "parameters": {
        "required": [
          "behaviorId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-devices",
      "method": "GET",
      "url_pattern": "/api/v1/devices",
      "name": "List all devices",
      "entity": "device",
      "operation": "list",
      "description": "Lists all devices with pagination support.\n\n>**Note:** To list all devices enrolled by a user, use the [List all devices endpoint in the User Resources API](/openapi/okta-management/management/tag/UserResources/#tag/UserResources/operation/listUserDevices).\n\nYou can return a subset of devices that match a supported search criteria using the `search` query parameter.\nSearches for devices based on the properties specified in the `search` parameter conforming SCIM filter specifications (case-insensitive). This data is eventually consistent. The API returns different results depending on specified queries in the request. Empty list is returned if no objects match `search` request.\n> **Note:** Listing devices with `search` should not be used as a part of any critical flow, such as authentication or updates, to prevent potential data loss. `search` results may not reflect the latest information, as this endpoint uses a search index which may not be up-to-date with recent updates to the object.\n\nDon't use search results directly for record updates, as the data might be stale and therefore overwrite newer data, resulting in data loss. \n\nUse an `id` lookup for records that you update to ensure your results contain the latest data.\n\nThis operation requires [URL encoding](https://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1). For example, `search=profile.displayName eq \"Bob\"` is encoded as `search=profile.displayName%20eq%20%22Bob%22`.",
      "folder_path": "Devices",
      "parameters": {
        "required": [],
        "optional": [
          "after",
          "limit",
          "search",
          "expand"
        ]
      }
    },
    {
      "id": "get-device",
      "method": "GET",
      "url_pattern": "/api/v1/devices/:deviceId",
      "name": "Retrieve a device",
      "entity": "device",
      "operation": "get",
      "description": "Retrieves a device by `deviceId`",
      "folder_path": "Devices",
      "parameters": {
        "required": [
          "deviceId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-device",
      "method": "DELETE",
      "url_pattern": "/api/v1/devices/:deviceId",
      "name": "Delete a device",
      "entity": "device",
      "operation": "delete",
      "description": "Deletes (permanently) a device by `deviceId` if it has a status of `DEACTIVATED`. You can transition the device to `DEACTIVATED` status using the [Deactivate a Device](/openapi/okta-management/management/tag/Device/#tag/Device/operation/deactivateDevice) endpoint.\nThis request is destructive and deletes all of the profile data related to the device. Once deleted, device data can't be recovered. However, reenrollment creates a new device record.\n> **Note:** Attempts to delete a device that isn't in a `DEACTIVATED` state raise an error.",
      "folder_path": "Devices",
      "parameters": {
        "required": [
          "deviceId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-device",
      "method": "POST",
      "url_pattern": "/api/v1/devices/:deviceId/lifecycle/activate",
      "name": "Activate a device",
      "entity": "device",
      "operation": "activate",
      "description": "Activates a device by setting its status to `ACTIVE` by `deviceId`.\nActivated devices are used to create and delete device user links.",
      "folder_path": "Devices",
      "parameters": {
        "required": [
          "deviceId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-device",
      "method": "POST",
      "url_pattern": "/api/v1/devices/:deviceId/lifecycle/deactivate",
      "name": "Deactivate a device",
      "entity": "device",
      "operation": "deactivate",
      "description": "Deactivates a device by setting its status to `DEACTIVATED` by `deviceId`.\nDeactivation causes a device to lose all device user links. Set the device status to `DEACTIVATED` before deleting it.\n> **Note:** When deactivating a Device, keep in mind the following:\n  - Device deactivation is a destructive operation for device factors and client certificates. Device reenrollment using Okta Verify allows end users to set up new factors on the device.\n  - Device deletion removes the device record from Okta. Reenrollment creates a new device record.",
      "folder_path": "Devices",
      "parameters": {
        "required": [
          "deviceId"
        ],
        "optional": []
      }
    },
    {
      "id": "suspend-device",
      "method": "POST",
      "url_pattern": "/api/v1/devices/:deviceId/lifecycle/suspend",
      "name": "Suspend a Device",
      "entity": "device",
      "operation": "suspend",
      "description": "Suspends a device by setting its status to `SUSPENDED`.\nUse suspended devices to create and delete device user links. You can only unsuspend or deactivate suspended devices.\n> **Note:** `SUSPENDED` status is meant to be temporary, so it isn't destructive.",
      "folder_path": "Devices",
      "parameters": {
        "required": [
          "deviceId"
        ],
        "optional": []
      }
    },
    {
      "id": "unsuspend-device",
      "method": "POST",
      "url_pattern": "/api/v1/devices/:deviceId/lifecycle/unsuspend",
      "name": "Unsuspend a Device",
      "entity": "device",
      "operation": "unsuspend",
      "description": "Unsuspends a device by returning its `status` to `ACTIVE`.\n>**Note:** Only devices with a `SUSPENDED` status can be unsuspended.",
      "folder_path": "Devices",
      "parameters": {
        "required": [
          "deviceId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-users-for-device",
      "method": "GET",
      "url_pattern": "/api/v1/devices/:deviceId/users",
      "name": "List all users for a device",
      "entity": "device",
      "operation": "list_users",
      "description": "Lists all Users for a device by `deviceId`",
      "folder_path": "Devices",
      "parameters": {
        "required": [
          "deviceId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-device-assurance-policies",
      "method": "GET",
      "url_pattern": "/api/v1/device-assurances",
      "name": "List all device assurance policies",
      "entity": "device_assurance_policy",
      "operation": "list",
      "description": "Lists all device assurance policies",
      "folder_path": "Device Assurance Policies",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "create-device-assurance-policy",
      "method": "POST",
      "url_pattern": "/api/v1/device-assurances",
      "name": "Create a device assurance policy",
      "entity": "device_assurance_policy",
      "operation": "create",
      "description": "Creates a new device assurance policy",
      "folder_path": "Device Assurance Policies",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-device-assurance-policy",
      "method": "GET",
      "url_pattern": "/api/v1/device-assurances/:deviceAssuranceId",
      "name": "Retrieve a device assurance policy",
      "entity": "device_assurance_policy",
      "operation": "get",
      "description": "Retrieves a device assurance policy by `deviceAssuranceId`",
      "folder_path": "Device Assurance Policies",
      "parameters": {
        "required": [
          "deviceAssuranceId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-device-assurance-policy",
      "method": "PUT",
      "url_pattern": "/api/v1/device-assurances/:deviceAssuranceId",
      "name": "Replace a device assurance policy",
      "entity": "device_assurance_policy",
      "operation": "replace",
      "description": "Replaces a device assurance policy by `deviceAssuranceId`",
      "folder_path": "Device Assurance Policies",
      "parameters": {
        "required": [
          "deviceAssuranceId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-device-assurance-policy",
      "method": "DELETE",
      "url_pattern": "/api/v1/device-assurances/:deviceAssuranceId",
      "name": "Delete a device assurance policy",
      "entity": "device_assurance_policy",
      "operation": "delete",
      "description": "Deletes a device assurance policy by `deviceAssuranceId`. If the device assurance policy is currently being used in the org Authentication Policies, the delete will not be allowed.",
      "folder_path": "Device Assurance Policies",
      "parameters": {
        "required": [
          "deviceAssuranceId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-device-integrations",
      "method": "GET",
      "url_pattern": "/api/v1/device-integrations",
      "name": "List all device integrations",
      "entity": "device_integration",
      "operation": "list",
      "description": "Lists all device integrations for your org. Examples include Device Posture Provider, Windows Security Center, Chrome Device Trust, OSQuery, and Android Device Trust.",
      "folder_path": "Device Integrations",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-device-integration",
      "method": "GET",
      "url_pattern": "/api/v1/device-integrations/:deviceIntegrationId",
      "name": "Retrieve a device integration",
      "entity": "device_integration",
      "operation": "get",
      "description": "Retrieves a device integration by `deviceIntegrationId`",
      "folder_path": "Device Integrations",
      "parameters": {
        "required": [
          "deviceIntegrationId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-device-integration",
      "method": "POST",
      "url_pattern": "/api/v1/device-integrations/:deviceIntegrationId/lifecycle/activate",
      "name": "Activate a device integration",
      "entity": "device_integration",
      "operation": "activate",
      "description": "Activates a device integration and populates the related configurations by `deviceIntegrationId`",
      "folder_path": "Device Integrations",
      "parameters": {
        "required": [
          "deviceIntegrationId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-device-integration",
      "method": "POST",
      "url_pattern": "/api/v1/device-integrations/:deviceIntegrationId/lifecycle/deactivate",
      "name": "Deactivate a device integration",
      "entity": "device_integration",
      "operation": "deactivate",
      "description": "Deactivates a device integration by `deviceIntegrationId`",
      "folder_path": "Device Integrations",
      "parameters": {
        "required": [
          "deviceIntegrationId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-device-posture-checks",
      "method": "GET",
      "url_pattern": "/api/v1/device-posture-checks",
      "name": "List all device posture checks",
      "entity": "device_posture_check",
      "operation": "list",
      "description": "Lists all device posture checks",
      "folder_path": "Device Posture Checks",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "create-device-posture-check",
      "method": "POST",
      "url_pattern": "/api/v1/device-posture-checks",
      "name": "Create a device posture check",
      "entity": "device_posture_check",
      "operation": "create",
      "description": "Creates a device posture check",
      "folder_path": "Device Posture Checks",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "list-default-device-posture-checks",
      "method": "GET",
      "url_pattern": "/api/v1/device-posture-checks/default",
      "name": "List all default device posture checks",
      "entity": "device_posture_check",
      "operation": "list_defaults",
      "description": "Lists all default device posture checks. Default device posture checks are defined by Okta. Their type will always be `BUILTIN`.",
      "folder_path": "Device Posture Checks",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-device-posture-check",
      "method": "GET",
      "url_pattern": "/api/v1/device-posture-checks/:postureCheckId",
      "name": "Retrieve a device posture check",
      "entity": "device_posture_check",
      "operation": "get",
      "description": "Retrieves a device posture check by `postureCheckId`",
      "folder_path": "Device Posture Checks",
      "parameters": {
        "required": [
          "postureCheckId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-device-posture-check",
      "method": "PUT",
      "url_pattern": "/api/v1/device-posture-checks/:postureCheckId",
      "name": "Replace a device posture check",
      "entity": "device_posture_check",
      "operation": "replace",
      "description": "Replaces a device posture check by `postureCheckId`",
      "folder_path": "Device Posture Checks",
      "parameters": {
        "required": [
          "postureCheckId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-device-posture-check",
      "method": "DELETE",
      "url_pattern": "/api/v1/device-posture-checks/:postureCheckId",
      "name": "Delete a device posture check",
      "entity": "device_posture_check",
      "operation": "delete",
      "description": "Deletes a device posture check by `postureCheckId`. You can't delete the device posture check if it's used in a device assurance policy.",
      "folder_path": "Device Posture Checks",
      "parameters": {
        "required": [
          "postureCheckId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-groups",
      "method": "GET",
      "url_pattern": "/api/v1/groups",
      "name": "List all groups",
      "entity": "group",
      "operation": "list",
      "description": "Lists all groups with pagination support.\n\n> **Note:** To list all groups belonging to a member, use the [List all groups endpoint in the User Resources API](/openapi/okta-management/management/tag/UserResources/#tag/UserResources/operation/listUserGroups).\n\nThe number of groups returned depends on the specified [`limit`](/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroups!in=query&path=limit&t=request), if you have a search, filter, and/or query parameter set, and if that parameter is not null. We recommend using a limit less than or equal to 200.\n\nA subset of groups can be returned that match a supported filter expression, query, or search criteria.\n\n> **Note:** Results from the filter or query parameter are driven from an eventually consistent datasource. The synchronization lag is typically less than one second.",
      "folder_path": "Groups",
      "parameters": {
        "required": [],
        "optional": [
          "search",
          "filter",
          "q",
          "after",
          "limit",
          "expand",
          "sortBy",
          "sortOrder"
        ]
      }
    },
    {
      "id": "create-group",
      "method": "POST",
      "url_pattern": "/api/v1/groups",
      "name": "Add a group",
      "entity": "group",
      "operation": "create",
      "description": "Adds a new group with the `OKTA_GROUP` type to your org.\n> **Note:** App import operations are responsible for syncing groups with `APP_GROUP` type such as Active Directory groups. See\n[About groups](https://help.okta.com/okta_help.htm?id=Directory_Groups) in the help documentation.",
      "folder_path": "Groups",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-group",
      "method": "GET",
      "url_pattern": "/api/v1/groups/:groupId",
      "name": "Retrieve a group",
      "entity": "group",
      "operation": "get",
      "description": "Retrieves a specific group by `id` from your org",
      "folder_path": "Groups",
      "parameters": {
        "required": [
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-group",
      "method": "PUT",
      "url_pattern": "/api/v1/groups/:groupId",
      "name": "Replace a group",
      "entity": "group",
      "operation": "replace",
      "description": "Replaces the profile for a group of `OKTA_GROUP` type from your org.\n> **Note :** You only can modify profiles for groups of the `OKTA_GROUP` type.\n>\n> App imports are responsible for updating profiles for groups of the `APP_GROUP` type, such as Active Directory groups.",
      "folder_path": "Groups",
      "parameters": {
        "required": [
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-group",
      "method": "DELETE",
      "url_pattern": "/api/v1/groups/:groupId",
      "name": "Delete a group",
      "entity": "group",
      "operation": "delete",
      "description": "Deletes a group of the `OKTA_GROUP` or `APP_GROUP` type from your org.\n> **Note:** You can't remove groups of type `APP_GROUP` if they are used in a group push mapping.",
      "folder_path": "Groups",
      "parameters": {
        "required": [
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-assigned-apps-for-group",
      "method": "GET",
      "url_pattern": "/api/v1/groups/:groupId/apps",
      "name": "List all assigned apps",
      "entity": "group",
      "operation": "list_assigned_apps",
      "description": "Lists all apps that are assigned to a group. See [Application Groups API](/openapi/okta-management/management/tag/ApplicationGroups/).",
      "folder_path": "Groups",
      "parameters": {
        "required": [
          "groupId"
        ],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "list-group-members",
      "method": "GET",
      "url_pattern": "/api/v1/groups/:groupId/users",
      "name": "List all member users",
      "entity": "group",
      "operation": "list_members",
      "description": "Lists all users that are a member of a group.\nThe default user limit is set to a very high number due to historical reasons that are no longer valid for most orgs. This will change in a future version of this API. The recommended page limit is now `limit=200`.",
      "folder_path": "Groups",
      "parameters": {
        "required": [
          "groupId"
        ],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "add-member-to-group",
      "method": "PUT",
      "url_pattern": "/api/v1/groups/:groupId/users/:userId",
      "name": "Assign a user to a group",
      "entity": "group",
      "operation": "add_member",
      "description": "Assigns a user to a group with the `OKTA_GROUP` type.\n> **Note:** You only can modify memberships for groups of the `OKTA_GROUP` type. App imports are responsible for managing group memberships for groups of the `APP_GROUP` type, such as Active Directory groups.",
      "folder_path": "Groups",
      "parameters": {
        "required": [
          "groupId",
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "remove-member-from-group",
      "method": "DELETE",
      "url_pattern": "/api/v1/groups/:groupId/users/:userId",
      "name": "Unassign a user from a group",
      "entity": "group",
      "operation": "remove_member",
      "description": "Unassigns a user from a group with the `OKTA_GROUP` type.\n> **Note:** You only can modify memberships for groups of the `OKTA_GROUP` type.\n>\n> App imports are responsible for managing group memberships for groups of the `APP_GROUP` type, such as Active Directory groups.",
      "folder_path": "Groups",
      "parameters": {
        "required": [
          "groupId",
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-group-owners",
      "method": "GET",
      "url_pattern": "/api/v1/groups/:groupId/owners",
      "name": "List all group owners",
      "entity": "group_owner",
      "operation": "list",
      "description": "Lists all owners for a specific group",
      "folder_path": "Group Owners",
      "parameters": {
        "required": [
          "groupId"
        ],
        "optional": [
          "search",
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "assign-group-owner",
      "method": "POST",
      "url_pattern": "/api/v1/groups/:groupId/owners",
      "name": "Assign a group owner",
      "entity": "group_owner",
      "operation": "assign",
      "description": "Assigns a group owner",
      "folder_path": "Group Owners",
      "parameters": {
        "required": [
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-group-owner",
      "method": "DELETE",
      "url_pattern": "/api/v1/groups/:groupId/owners/:ownerId",
      "name": "Delete a group owner",
      "entity": "group_owner",
      "operation": "unassign",
      "description": "Deletes a group owner from a specific group",
      "folder_path": "Group Owners",
      "parameters": {
        "required": [
          "groupId",
          "ownerId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-group-rules",
      "method": "GET",
      "url_pattern": "/api/v1/groups/rules",
      "name": "List all group rules",
      "entity": "group_rule",
      "operation": "list",
      "description": "Lists all group rules for your org",
      "folder_path": "Group Rules",
      "parameters": {
        "required": [],
        "optional": [
          "limit",
          "after",
          "search",
          "expand"
        ]
      }
    },
    {
      "id": "create-group-rule",
      "method": "POST",
      "url_pattern": "/api/v1/groups/rules",
      "name": "Create a group rule",
      "entity": "group_rule",
      "operation": "create",
      "description": "Creates a group rule to dynamically add users to the specified group if they match the condition\n> **Note:** Group rules are created with the status set to `'INACTIVE'`.",
      "folder_path": "Group Rules",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-group-rule",
      "method": "GET",
      "url_pattern": "/api/v1/groups/rules/:groupRuleId",
      "name": "Retrieve a group rule",
      "entity": "group_rule",
      "operation": "get",
      "description": "Retrieves a specific group rule by ID from your org",
      "folder_path": "Group Rules",
      "parameters": {
        "required": [
          "groupRuleId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "replace-group-rule",
      "method": "PUT",
      "url_pattern": "/api/v1/groups/rules/:groupRuleId",
      "name": "Replace a group rule",
      "entity": "group_rule",
      "operation": "replace",
      "description": "Replaces a group rule\n> **Notes:** You can only update rules with a group whose status is set to `'INACTIVE'`.\n>\n> You currently can't update the `action` section.",
      "folder_path": "Group Rules",
      "parameters": {
        "required": [
          "groupRuleId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-group-rule",
      "method": "DELETE",
      "url_pattern": "/api/v1/groups/rules/:groupRuleId",
      "name": "Delete a group rule",
      "entity": "group_rule",
      "operation": "delete",
      "description": "Deletes a specific group rule by `groupRuleId`",
      "folder_path": "Group Rules",
      "parameters": {
        "required": [
          "groupRuleId"
        ],
        "optional": [
          "removeUsers"
        ]
      }
    },
    {
      "id": "activate-group-rule",
      "method": "POST",
      "url_pattern": "/api/v1/groups/rules/:groupRuleId/lifecycle/activate",
      "name": "Activate a group rule",
      "entity": "group_rule",
      "operation": "activate",
      "description": "Activates a specific group rule by ID from your org",
      "folder_path": "Group Rules",
      "parameters": {
        "required": [
          "groupRuleId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-group-rule",
      "method": "POST",
      "url_pattern": "/api/v1/groups/rules/:groupRuleId/lifecycle/deactivate",
      "name": "Deactivate a group rule",
      "entity": "group_rule",
      "operation": "deactivate",
      "description": "Deactivates a specific group rule by ID from your org",
      "folder_path": "Group Rules",
      "parameters": {
        "required": [
          "groupRuleId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-log-streams",
      "method": "GET",
      "url_pattern": "/api/v1/logStreams",
      "name": "List all log streams",
      "entity": "log_stream",
      "operation": "list",
      "description": "Lists all log stream objects in your org. You can request a paginated list or a subset of log streams that match a supported filter expression.",
      "folder_path": "Log Streaming",
      "parameters": {
        "required": [],
        "optional": [
          "after",
          "limit",
          "filter"
        ]
      }
    },
    {
      "id": "create-log-stream",
      "method": "POST",
      "url_pattern": "/api/v1/logStreams",
      "name": "Create a log stream",
      "entity": "log_stream",
      "operation": "create",
      "description": "Creates a new log stream object",
      "folder_path": "Log Streaming",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-log-stream",
      "method": "GET",
      "url_pattern": "/api/v1/logStreams/:logStreamId",
      "name": "Retrieve a log stream",
      "entity": "log_stream",
      "operation": "get",
      "description": "Retrieves a log stream object by ID",
      "folder_path": "Log Streaming",
      "parameters": {
        "required": [
          "logStreamId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-log-stream",
      "method": "PUT",
      "url_pattern": "/api/v1/logStreams/:logStreamId",
      "name": "Replace a log stream",
      "entity": "log_stream",
      "operation": "replace",
      "description": "Replaces the log stream object properties for a given ID.\n\nThis operation is typically used to update the configuration of a log stream.\nDepending on the type of log stream you want to update, certain properties can't be modified after the log stream is initially created.\nUse the [Retrieve the log stream schema for the schema type](/openapi/okta-management/management/tag/Schema/#tag/Schema/operation/getLogStreamSchema) request to determine which properties you can update for the specific log stream type.\nLog stream properties with the `\"writeOnce\" : true` attribute can't be updated after creation.\nYou must still specify these `writeOnce` properties in the request body with the original values in the PUT request.\n\n> **Note:** You don't have to specify properties that have both the `\"writeOnce\": true` and the `\"writeOnly\": true` attributes in the PUT request body. These property values are ignored even if you add them in the PUT request body.",
      "folder_path": "Log Streaming",
      "parameters": {
        "required": [
          "logStreamId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-log-stream",
      "method": "DELETE",
      "url_pattern": "/api/v1/logStreams/:logStreamId",
      "name": "Delete a log stream",
      "entity": "log_stream",
      "operation": "delete",
      "description": "Deletes a log stream object from your org by ID",
      "folder_path": "Log Streaming",
      "parameters": {
        "required": [
          "logStreamId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-log-stream",
      "method": "POST",
      "url_pattern": "/api/v1/logStreams/:logStreamId/lifecycle/activate",
      "name": "Activate a log stream",
      "entity": "log_stream",
      "operation": "activate",
      "description": "Activates a log stream by `logStreamId`",
      "folder_path": "Log Streaming",
      "parameters": {
        "required": [
          "logStreamId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-log-stream",
      "method": "POST",
      "url_pattern": "/api/v1/logStreams/:logStreamId/lifecycle/deactivate",
      "name": "Deactivate a log stream",
      "entity": "log_stream",
      "operation": "deactivate",
      "description": "Deactivates a log stream by `logStreamId`",
      "folder_path": "Log Streaming",
      "parameters": {
        "required": [
          "logStreamId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-network-zones",
      "method": "GET",
      "url_pattern": "/api/v1/zones",
      "name": "List all network zones",
      "entity": "network_zone",
      "operation": "list",
      "description": "Lists all Network Zones with pagination. A subset of zones can be returned that match a supported filter expression or query.\n\nThis operation requires URL encoding. For example, `filter=(id eq \"nzoul0wf9jyb8xwZm0g3\" or id eq \"nzoul1MxmGN18NDQT0g3\")` is encoded as `filter=%28id+eq+%22nzoul0wf9jyb8xwZm0g3%22+or+id+eq+%22nzoul1MxmGN18NDQT0g3%22%29`.\n\nOkta supports filtering on the `id`, `usage`, and `system` properties. See [Filter](https://developer.okta.com/docs/api/#filter) for more information on the expressions that are used in filtering.",
      "folder_path": "Network Zones",
      "parameters": {
        "required": [],
        "optional": [
          "after",
          "limit",
          "filter"
        ]
      }
    },
    {
      "id": "create-network-zone",
      "method": "POST",
      "url_pattern": "/api/v1/zones",
      "name": "Create a network zone",
      "entity": "network_zone",
      "operation": "create",
      "description": "Creates a Network Zone\n* For an IP Network Zone, you must define either `gateways` or `proxies`.\n* For a Dynamic Network Zone, you must define at least one of the following: `asns`, `locations`, or `proxyType`.\n* For an Enhanced Dynamic Network Zone, you must define at least one of the following: `asns`, `locations`, or `ipServiceCategories`.",
      "folder_path": "Network Zones",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-network-zone",
      "method": "GET",
      "url_pattern": "/api/v1/zones/:zoneId",
      "name": "Retrieve a network zone",
      "entity": "network_zone",
      "operation": "get",
      "description": "Retrieves a Network Zone by `zoneId`",
      "folder_path": "Network Zones",
      "parameters": {
        "required": [
          "zoneId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-network-zone",
      "method": "PUT",
      "url_pattern": "/api/v1/zones/:zoneId",
      "name": "Replace a network zone",
      "entity": "network_zone",
      "operation": "replace",
      "description": "Replaces a Network Zone by `zoneId`. The replaced Network Zone type must be the same as the existing type.\nYou can replace the usage (`POLICY`, `BLOCKLIST`) of a Network Zone by updating the `usage` attribute.\n\n**IP exempt zone**<br>\nIf you have the IP exempt zone feature enabled, you can allow traffic from specific gateway IPs irrespective of Okta ThreatInsight configurations, blocked network zones, or IP change events within Identity Threat Protection with Okta AI.<br>\n<br>\nWhen you enable this feature, Okta creates a zone called `DefaultExemptIpZone`. Gateway IPs that you add to this zone always have access to Okta resources. See [IP exempt zone](https://help.okta.com/okta_help.htm?type=oie&id=csh-about-ip-exempt-zone).\n\n> **Note:** You can't add trusted proxy IPs to this zone, delete the zone, or create additional exempt IP zones.",
      "folder_path": "Network Zones",
      "parameters": {
        "required": [
          "zoneId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-network-zone",
      "method": "DELETE",
      "url_pattern": "/api/v1/zones/:zoneId",
      "name": "Delete a network zone",
      "entity": "network_zone",
      "operation": "delete",
      "description": "Deletes a Network Zone by `zoneId`\n> **Notes:**\n> * You can't delete a Network Zone that's used by a [Policy](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/) or [Rule](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/#tag/Policy/operation/listPolicyRules).\n> * For Okta Identity Engine orgs, you can't delete a Network Zone with an ACTIVE `status`. <x-lifecycle class=\"oie\"></x-lifecycle>",
      "folder_path": "Network Zones",
      "parameters": {
        "required": [
          "zoneId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-network-zone",
      "method": "POST",
      "url_pattern": "/api/v1/zones/:zoneId/lifecycle/activate",
      "name": "Activate a network zone",
      "entity": "network_zone",
      "operation": "activate",
      "description": "Activates a Network Zone by `zoneId`",
      "folder_path": "Network Zones",
      "parameters": {
        "required": [
          "zoneId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-network-zone",
      "method": "POST",
      "url_pattern": "/api/v1/zones/:zoneId/lifecycle/deactivate",
      "name": "Deactivate a network zone",
      "entity": "network_zone",
      "operation": "deactivate",
      "description": "Deactivates a Network Zone by `zoneId`",
      "folder_path": "Network Zones",
      "parameters": {
        "required": [
          "zoneId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-okta-application-settings",
      "method": "GET",
      "url_pattern": "/api/v1/first-party-app-settings/:appName",
      "name": "Retrieve the Okta application settings",
      "entity": "okta_application_settings",
      "operation": "get",
      "description": "Retrieves the settings for an Okta app (also known as an Okta first-party app)",
      "folder_path": "Okta Application Settings",
      "parameters": {
        "required": [
          "appName"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-okta-application-settings",
      "method": "PUT",
      "url_pattern": "/api/v1/first-party-app-settings/:appName",
      "name": "Replace the Okta application settings",
      "entity": "okta_application_settings",
      "operation": "replace",
      "description": "Replaces the settings for an Okta app (also known as an Okta first-party app)",
      "folder_path": "Okta Application Settings",
      "parameters": {
        "required": [
          "appName"
        ],
        "optional": []
      }
    },
    {
      "id": "list-policies",
      "method": "GET",
      "url_pattern": "/api/v1/policies",
      "name": "List all policies",
      "entity": "policy",
      "operation": "list",
      "description": "Lists all policies with the specified type",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "type"
        ],
        "optional": [
          "status",
          "q",
          "expand",
          "sortBy",
          "limit",
          "resourceId",
          "after"
        ]
      }
    },
    {
      "id": "create-policy",
      "method": "POST",
      "url_pattern": "/api/v1/policies",
      "name": "Create a policy",
      "entity": "policy",
      "operation": "create",
      "description": "Creates a policy. There are many types of policies that you can create. See [Policies](https://developer.okta.com/docs/concepts/policies/) for an overview of the types of policies available and links to more indepth information.",
      "folder_path": "Policies",
      "parameters": {
        "required": [],
        "optional": [
          "activate"
        ]
      }
    },
    {
      "id": "simulate-policy",
      "method": "POST",
      "url_pattern": "/api/v1/policies/simulate",
      "name": "Create a policy simulation",
      "entity": "policy",
      "operation": "simulate",
      "description": "Creates a policy or policy rule simulation. The access simulation evaluates policy and policy rules based on the existing policy rule configuration.\nThe evaluation result simulates what the real-world authentication flow is and what policy rules have been applied or matched to the authentication flow.",
      "folder_path": "Policies",
      "parameters": {
        "required": [],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "get-policy",
      "method": "GET",
      "url_pattern": "/api/v1/policies/:policyId",
      "name": "Retrieve a policy",
      "entity": "policy",
      "operation": "get",
      "description": "Retrieves a policy",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "replace-policy",
      "method": "PUT",
      "url_pattern": "/api/v1/policies/:policyId",
      "name": "Replace a policy",
      "entity": "policy",
      "operation": "replace",
      "description": "Replaces the properties of a policy identified by `policyId`",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-policy",
      "method": "DELETE",
      "url_pattern": "/api/v1/policies/:policyId",
      "name": "Delete a policy",
      "entity": "policy",
      "operation": "delete",
      "description": "Deletes a policy",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-apps-for-policy",
      "method": "GET",
      "url_pattern": "/api/v1/policies/:policyId/app",
      "name": "List all apps mapped to a policy",
      "entity": "policy",
      "operation": "list_apps",
      "description": "Lists all applications mapped to a policy identified by `policyId`\n\n> **Note:** Use [List all resources mapped to a Policy](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/#tag/Policy/operation/listPolicyMappings) to list all applications mapped to a policy.",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": []
      }
    },
    {
      "id": "clone-policy",
      "method": "POST",
      "url_pattern": "/api/v1/policies/:policyId/clone",
      "name": "Clone an existing policy",
      "entity": "policy",
      "operation": "clone",
      "description": "Clones an existing policy",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-policy",
      "method": "POST",
      "url_pattern": "/api/v1/policies/:policyId/lifecycle/activate",
      "name": "Activate a policy",
      "entity": "policy",
      "operation": "activate",
      "description": "Activates a policy",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-policy",
      "method": "POST",
      "url_pattern": "/api/v1/policies/:policyId/lifecycle/deactivate",
      "name": "Deactivate a policy",
      "entity": "policy",
      "operation": "deactivate",
      "description": "Deactivates a policy",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-policy-resource-mappings",
      "method": "GET",
      "url_pattern": "/api/v1/policies/:policyId/mappings",
      "name": "List all resources mapped to a policy",
      "entity": "policy",
      "operation": "list_resources",
      "description": "Lists all resources mapped to a policy identified by `policyId`",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": []
      }
    },
    {
      "id": "map-resource-to-policy",
      "method": "POST",
      "url_pattern": "/api/v1/policies/:policyId/mappings",
      "name": "Map a resource to a policy",
      "entity": "policy",
      "operation": "map_resource",
      "description": "Maps a resource to a policy identified by `policyId`",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-policy-resource-mapping",
      "method": "GET",
      "url_pattern": "/api/v1/policies/:policyId/mappings/:mappingId",
      "name": "Retrieve a policy resource mapping",
      "entity": "policy",
      "operation": "get_resource_mapping",
      "description": "Retrieves a resource mapping for a policy identified by `policyId` and `mappingId`",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId",
          "mappingId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-policy-resource-mapping",
      "method": "DELETE",
      "url_pattern": "/api/v1/policies/:policyId/mappings/:mappingId",
      "name": "Delete a policy resource mapping",
      "entity": "policy",
      "operation": "delete_resource_mapping",
      "description": "Deletes the resource mapping for a policy identified by `policyId` and `mappingId`",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId",
          "mappingId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-policy-rules",
      "method": "GET",
      "url_pattern": "/api/v1/policies/:policyId/rules",
      "name": "List all policy rules",
      "entity": "policy",
      "operation": "list_rules",
      "description": "Lists all policy rules",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": [
          "limit"
        ]
      }
    },
    {
      "id": "create-policy-rule",
      "method": "POST",
      "url_pattern": "/api/v1/policies/:policyId/rules",
      "name": "Create a policy rule",
      "entity": "policy",
      "operation": "create_rule",
      "description": "Creates a policy rule\n\n> **Note:** You can't create additional rules for the `PROFILE_ENROLLMENT` or `POST_AUTH_SESSION` policies.",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId"
        ],
        "optional": [
          "activate",
          "limit"
        ]
      }
    },
    {
      "id": "get-policy-rule",
      "method": "GET",
      "url_pattern": "/api/v1/policies/:policyId/rules/:ruleId",
      "name": "Retrieve a policy rule",
      "entity": "policy",
      "operation": "get_rule",
      "description": "Retrieves a policy rule",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId",
          "ruleId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-policy-rule",
      "method": "PUT",
      "url_pattern": "/api/v1/policies/:policyId/rules/:ruleId",
      "name": "Replace a policy rule",
      "entity": "policy",
      "operation": "replace_rule",
      "description": "Replaces the properties for a policy rule identified by `policyId` and `ruleId`",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId",
          "ruleId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-policy-rule",
      "method": "DELETE",
      "url_pattern": "/api/v1/policies/:policyId/rules/:ruleId",
      "name": "Delete a policy rule",
      "entity": "policy",
      "operation": "delete_rule",
      "description": "Deletes a policy rule identified by `policyId` and `ruleId`",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId",
          "ruleId"
        ],
        "optional": []
      }
    },
    {
      "id": "activate-policy-rule",
      "method": "POST",
      "url_pattern": "/api/v1/policies/:policyId/rules/:ruleId/lifecycle/activate",
      "name": "Activate a policy rule",
      "entity": "policy",
      "operation": "activate_rule",
      "description": "Activates a policy rule identified by `policyId` and `ruleId`",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId",
          "ruleId"
        ],
        "optional": []
      }
    },
    {
      "id": "deactivate-policy-rule",
      "method": "POST",
      "url_pattern": "/api/v1/policies/:policyId/rules/:ruleId/lifecycle/deactivate",
      "name": "Deactivate a policy rule",
      "entity": "policy",
      "operation": "deactivate_rule",
      "description": "Deactivates a policy rule identified by `policyId` and `ruleId`",
      "folder_path": "Policies",
      "parameters": {
        "required": [
          "policyId",
          "ruleId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-users-with-roles",
      "method": "GET",
      "url_pattern": "/api/v1/iam/assignees/users",
      "name": "List all users with role assignments",
      "entity": "role_assignment",
      "operation": "list_users_with_roles",
      "description": "Lists all users with role assignments",
      "folder_path": "User Role Assignments",
      "parameters": {
        "required": [],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "list-user-roles",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/roles",
      "name": "List all user role assignments",
      "entity": "role_assignment",
      "operation": "list_by_user",
      "description": "Lists all roles assigned to a user (identified by `userId`)",
      "folder_path": "User Role Assignments",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "assign-role-to-user",
      "method": "POST",
      "url_pattern": "/api/v1/users/:userId/roles",
      "name": "Assign a user role",
      "entity": "role_assignment",
      "operation": "assign_to_user",
      "description": "Assigns a [standard role](/openapi/okta-management/guides/roles/#standard-roles) to a user.\n\nYou can also assign a custom role to a user, but the preferred method to assign a custom role to a user is to create a binding between the custom role, the resource set, and the user. See [Create a role resource set binding](/openapi/okta-management/management/tag/RoleDResourceSetBinding/#tag/RoleDResourceSetBinding/operation/createResourceSetBinding).\n\n> **Notes:**\n> * The request payload is different for standard and custom role assignments.\n> * For IAM-based standard role assignments, use the request payload for standard roles. However, the response payload for IAM-based role assignments is similar to the custom role's assignment response.",
      "folder_path": "User Role Assignments",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": [
          "disableNotifications"
        ]
      }
    },
    {
      "id": "get-user-role",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId",
      "name": "Retrieve a user role assignment",
      "entity": "role_assignment",
      "operation": "get_for_user",
      "description": "Retrieves a role assigned to a user (identified by `userId`). The `roleAssignmentId` parameter is the unique identifier for either a standard role assignment object or a custom role resource set binding object.",
      "folder_path": "User Role Assignments",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-role-from-user",
      "method": "DELETE",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId",
      "name": "Unassign a user role",
      "entity": "role_assignment",
      "operation": "unassign_from_user",
      "description": "Unassigns a role assignment (identified by `roleAssignmentId`) from a user (identified by `userId`)",
      "folder_path": "User Role Assignments",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-governance-sources-for-user-role",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/governance",
      "name": "Retrieve all user role governance sources",
      "entity": "role_assignment",
      "operation": "list_governance_sources_for_user_role",
      "description": "Retrieves the governance sources of a role (identified by `roleAssignmentId`) that's assigned to a user (identified by `userId`)",
      "folder_path": "User Role Assignments",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-governance-source-for-user-role",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/governance/:grantId",
      "name": "Retrieve a user role governance source",
      "entity": "role_assignment",
      "operation": "get_governance_source_for_user_role",
      "description": "Retrieves a governance source (identified by `grantId`) for a role (identified by `roleAssignmentId`) that's assigned to a user (identified by `userId`)",
      "folder_path": "User Role Assignments",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId",
          "grantId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-governance-source-resources-for-user-role",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/governance/:grantId/resources",
      "name": "Retrieve the user role governance source resources",
      "entity": "role_assignment",
      "operation": "list_governance_source_resources_for_user_role",
      "description": "Retrieves the resources of a governance source (identified by `grantId`) for a role (identified by `roleAssignmentId`) that's assigned to a user (identified by `userId`)",
      "folder_path": "User Role Assignments",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId",
          "grantId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-app-targets-for-user-role",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/targets/catalog/apps",
      "name": "List all admin role app targets",
      "entity": "role_assignment",
      "operation": "list_app_targets_for_user_role",
      "description": "Lists all app targets for an `APP_ADMIN` role assigned to a user. The response is a list that includes OIN-cataloged apps or app instances. The response payload for an app instance contains the `id` property, but an OIN-cataloged app payload doesn't.",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId"
        ],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "assign-all-apps-target-to-user-role",
      "method": "PUT",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/targets/catalog/apps",
      "name": "Assign all apps as target to admin role",
      "entity": "role_assignment",
      "operation": "assign_all_apps_as_target_to_user_role",
      "description": "Assigns all apps as target to an `APP_ADMIN` role",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "assign-app-target-to-user-role",
      "method": "PUT",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/targets/catalog/apps/:appName",
      "name": "Assign an admin role app target",
      "entity": "role_assignment",
      "operation": "assign_app_target_to_user_role",
      "description": "Assigns an OIN app target for an `APP_ADMIN` role assignment to an admin user. When you assign the first app target, you reduce the scope of the role assignment.\nThe role no longer applies to all app targets, but applies only to the specified target.\n\nAssigning an OIN app target overrides any existing app instance targets of the OIN app.\nFor example, if a user was assigned to administer a specific Facebook instance, a successful request to add an OIN app target with `facebook` for `appName` makes that user the admin for all Facebook instances.\n",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId",
          "appName"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-app-target-from-user-role",
      "method": "DELETE",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/targets/catalog/apps/:appName",
      "name": "Unassign an admin role app target",
      "entity": "role_assignment",
      "operation": "unassign_app_target_from_user_role",
      "description": "Unassigns an OIN app target from an `APP_ADMIN` role assignment to an admin user.\n\n> **Note:** You can't remove the last OIN app target from a role assignment since this causes an exception.\n> If you need a role assignment that applies to all apps, delete the `APP_ADMIN` role assignment to the user and recreate a new one.\n",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId",
          "appName"
        ],
        "optional": []
      }
    },
    {
      "id": "assign-app-instance-target-to-user-role",
      "method": "PUT",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/targets/catalog/apps/:appName/:appId",
      "name": "Assign an admin role app instance target",
      "entity": "role_assignment",
      "operation": "assign_app_instance_target_to_user_role",
      "description": "Assigns an app instance target to an `APP_ADMIN` role assignment to an admin user. When you assign the first OIN app or app instance target, you reduce the scope of the role assignment.\nThe role no longer applies to all app targets, but applies only to the specified target.\n\n> **Note:** You can target a mixture of both OIN app and app instance targets, but can't assign permissions to manage all instances of an OIN app and then assign a subset of permission to the same OIN app.\n> For example, you can't specify that an admin has access to manage all instances of the Salesforce app and then also manage specific configurations of the Salesforce app.\n",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId",
          "appName",
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-app-instance-target-from-user-role",
      "method": "DELETE",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/targets/catalog/apps/:appName/:appId",
      "name": "Unassign an admin role app instance target",
      "entity": "role_assignment",
      "operation": "unassign_app_instance_target_from_user_role",
      "description": "Unassigns an app instance target from an `APP_ADMIN` role assignment to an admin user.\n\n> **Note:** You can't remove the last app instance target from a role assignment.\n> If you need a role assignment that applies to all apps, delete the `APP_ADMIN` role assignment and recreate a new one.",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId",
          "appName",
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-group-targets-for-user-role",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/targets/groups",
      "name": "List all admin role group targets",
      "entity": "role_assignment",
      "operation": "list_group_targets_for_user_role",
      "description": "Lists all group targets for a `USER_ADMIN`, `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to an admin user.\nIf the role isn't scoped to specific group targets, an empty array `[]` is returned.\n",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId"
        ],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "assign-group-target-to-user-role",
      "method": "PUT",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/targets/groups/:groupId",
      "name": "Assign an admin role group target",
      "entity": "role_assignment",
      "operation": "assign_group_target_to_user_role",
      "description": "Assigns a group target for a `USER_ADMIN`, `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to an admin user.\nWhen you assign the first group target, you reduce the scope of the role assignment. The role no longer applies to all targets but applies only to the specified target.\n",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId",
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-group-target-from-user-role",
      "method": "DELETE",
      "url_pattern": "/api/v1/users/:userId/roles/:roleAssignmentId/targets/groups/:groupId",
      "name": "Unassign an admin role group target",
      "entity": "role_assignment",
      "operation": "unassign_group_target_from_user_role",
      "description": "Unassigns a group target from a `USER_ADMIN`, `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to an admin user.\n\n> **Note:** You can't remove the last group target from a role assignment since this causes an exception.\n> If you need a role assignment that applies to all groups, delete the role assignment to the user and recreate a new one.\n",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleAssignmentId",
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-role-targets-by-assignment-type",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/roles/:roleIdOrEncodedRoleId/targets",
      "name": "Retrieve a role target by assignment type",
      "entity": "role_assignment",
      "operation": "get_role_targets_by_assignment_type",
      "description": "Retrieves all role targets for an `APP_ADMIN`, `USER_ADMIN`, `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to an admin user by user or group assignment type.\nIf the role isn't scoped to specific group targets or any app targets, an empty array `[]` is returned.\n",
      "folder_path": "User Role Targets",
      "parameters": {
        "required": [
          "userId",
          "roleIdOrEncodedRoleId",
          "assignmentType"
        ],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "list-group-roles",
      "method": "GET",
      "url_pattern": "/api/v1/groups/:groupId/roles",
      "name": "List all group role assignments",
      "entity": "role_assignment",
      "operation": "list_by_group",
      "description": "Lists all assigned roles of a group by `groupId`",
      "folder_path": "Group Role Assignments",
      "parameters": {
        "required": [
          "groupId"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "assign-role-to-group",
      "method": "POST",
      "url_pattern": "/api/v1/groups/:groupId/roles",
      "name": "Assign a role to a group",
      "entity": "role_assignment",
      "operation": "assign_to_group",
      "description": "Assigns a [standard role](/openapi/okta-management/guides/roles/#standard-roles) to a group.\n\nYou can also assign a custom role to a group, but the preferred method to assign a custom role to a group is to create a binding between the custom role, the resource set, and the group. See [Create a role resource set binding](/openapi/okta-management/management/tag/RoleDResourceSetBinding/#tag/RoleDResourceSetBinding/operation/createResourceSetBinding).\n\n> **Notes:**\n> * The request payload is different for standard and custom role assignments.\n> * For IAM-based standard role assignments, use the request payload for standard roles. However, the response payload for IAM-based role assignments is similar to the custom role's assignment response.",
      "folder_path": "Group Role Assignments",
      "parameters": {
        "required": [
          "groupId"
        ],
        "optional": [
          "disableNotifications"
        ]
      }
    },
    {
      "id": "get-group-role",
      "method": "GET",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId",
      "name": "Retrieve a group role assignment",
      "entity": "role_assignment",
      "operation": "get_for_group",
      "description": "Retrieves a role assigned to a group (identified by the `groupId`). The `roleAssignmentId` is the unique identifier for either a standard role group assignment object or a custom role resource set binding object.",
      "folder_path": "Group Role Assignments",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-role-from-group",
      "method": "DELETE",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId",
      "name": "Unassign a group role",
      "entity": "role_assignment",
      "operation": "unassign_from_group",
      "description": "Unassigns a role assignment (identified by `roleAssignmentId`) from a group (identified by the `groupId`)",
      "folder_path": "Group Role Assignments",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-client-roles",
      "method": "GET",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles",
      "name": "List all client role assignments",
      "entity": "role_assignment",
      "operation": "list_by_client",
      "description": "Lists all roles assigned to a client app identified by `clientId`",
      "folder_path": "Client Role Assignments",
      "parameters": {
        "required": [
          "clientId"
        ],
        "optional": []
      }
    },
    {
      "id": "assign-role-to-client",
      "method": "POST",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles",
      "name": "Assign a client role",
      "entity": "role_assignment",
      "operation": "assign_to_client",
      "description": "Assigns a [standard role](/openapi/okta-management/guides/roles/#standard-roles) to a client app.\n\nYou can also assign a custom role to a client app, but the preferred method to assign a custom role to a client is to create a binding between the custom role, the resource set, and the client app. See [Create a role resource set binding](/openapi/okta-management/management/tag/RoleDResourceSetBinding/#tag/RoleDResourceSetBinding/operation/createResourceSetBinding).\n\n> **Notes:**\n> * The request payload is different for standard and custom role assignments.\n> * For IAM-based standard role assignments, use the request payload for standard roles. However, the response payload for IAM-based role assignments is similar to the custom role's assignment response.",
      "folder_path": "Client Role Assignments",
      "parameters": {
        "required": [
          "clientId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-client-role",
      "method": "GET",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId",
      "name": "Retrieve a client role",
      "entity": "role_assignment",
      "operation": "get_for_client",
      "description": "Retrieves a role assignment (identified by `roleAssignmentId`) for a client app (identified by `clientId`)",
      "folder_path": "Client Role Assignments",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-role-from-client",
      "method": "DELETE",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId",
      "name": "Unassign a client role",
      "entity": "role_assignment",
      "operation": "unassign_from_client",
      "description": "Unassigns a role assignment (identified by `roleAssignmentId`) from a client app (identified by `clientId`)",
      "folder_path": "Client Role Assignments",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-app-targets-for-group-role",
      "method": "GET",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId/targets/catalog/apps",
      "name": "List all group role app targets",
      "entity": "role_assignment",
      "operation": "list_app_targets_for_group_role",
      "description": "Lists all app targets for an `APP_ADMIN` role assignment to a group. The response includes a list of OIN-cataloged apps or app instances. The response payload for an app instance contains the `id` property, but an OIN-cataloged app doesn't.",
      "folder_path": "Group Role Targets",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId"
        ],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "assign-app-target-to-group-role",
      "method": "PUT",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId/targets/catalog/apps/:appName",
      "name": "Assign a group role app target",
      "entity": "role_assignment",
      "operation": "assign_app_target_to_group_role",
      "description": "Assigns an OIN app target to an `APP_ADMIN` role assignment to a group. When you assign the first OIN app target, you reduce the scope of the role assignment. The role no longer applies to all app targets, but applies only to the specified target. An OIN app target that's assigned to the role overrides any existing instance targets of the OIN app. For example, if a user is assigned to administer a specific Facebook instance, a successful request to add an OIN app with `facebook` for `appName` makes that user the administrator for all Facebook instances.",
      "folder_path": "Group Role Targets",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId",
          "appName"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-app-target-from-group-role",
      "method": "DELETE",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId/targets/catalog/apps/:appName",
      "name": "Unassign a group role app target",
      "entity": "role_assignment",
      "operation": "unassign_app_target_from_group_role",
      "description": "Unassigns an OIN app target from an `APP_ADMIN` role assignment to a group\n\n> **Note:** You can't remove the last app target from a role assignment.\n> If you need a role assignment that applies to all apps, delete the `APP_ADMIN` role assignment with the target and create another one. See [Unassign a group role](/openapi/okta-management/management/tag/RoleAssignmentBGroup/#tag/RoleAssignmentBGroup/operation/unassignRoleFromGroup).\n",
      "folder_path": "Group Role Targets",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId",
          "appName"
        ],
        "optional": []
      }
    },
    {
      "id": "assign-app-instance-target-to-group-role",
      "method": "PUT",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId/targets/catalog/apps/:appName/:appId",
      "name": "Assign a group role app instance target",
      "entity": "role_assignment",
      "operation": "assign_app_instance_target_to_group_role",
      "description": "Assigns an app instance target to an `APP_ADMIN` role assignment to a group. When you assign the first OIN app or app instance target, you reduce the scope of the role assignment.\nThe role no longer applies to all app targets, but applies only to the specified target.\n\n> **Note:** You can target a mixture of both OIN app and app instance targets, but you can't assign permissions to manage all instances of an OIN app and then assign a subset of permissions to the same app.\nFor example, you can't specify that an admin has access to manage all instances of the Salesforce app and then also manage specific configurations of the Salesforce app.",
      "folder_path": "Group Role Targets",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId",
          "appName",
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-app-instance-target-from-group-role",
      "method": "DELETE",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId/targets/catalog/apps/:appName/:appId",
      "name": "Unassign a group role app instance target",
      "entity": "role_assignment",
      "operation": "unassign_app_instance_target_from_group_role",
      "description": "Unassigns an app instance target from an `APP_ADMIN` role assignment to a group\n\n> **Note:** You can't remove the last app instance target from a role assignment.\n> If you need a role assignment that applies to all apps, delete the `APP_ADMIN` role assignment with the target and create another one. See [Unassign a group role](/openapi/okta-management/management/tag/RoleAssignmentBGroup/#tag/RoleAssignmentBGroup/operation/unassignRoleFromGroup).",
      "folder_path": "Group Role Targets",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId",
          "appName",
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-group-targets-for-group-role",
      "method": "GET",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId/targets/groups",
      "name": "List all group role group targets",
      "entity": "role_assignment",
      "operation": "list_group_targets_for_group_role",
      "description": "Lists all group targets for a [`USER_ADMIN`](/openapi/okta-management/guides/roles/#standard-roles), `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to a group.\nIf the role isn't scoped to specific group targets, Okta returns an empty array `[]`.",
      "folder_path": "Group Role Targets",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId"
        ],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "assign-group-target-to-group-role",
      "method": "PUT",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId/targets/groups/:targetGroupId",
      "name": "Assign a group role group target",
      "entity": "role_assignment",
      "operation": "assign_group_target_to_group_role",
      "description": "Assigns a group target to a [`USER_ADMIN`](/openapi/okta-management/guides/roles/#standard-roles), `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to a group.\nWhen you assign the first group target, you reduce the scope of the role assignment. The role no longer applies to all targets but applies only to the specified target.",
      "folder_path": "Group Role Targets",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId",
          "targetGroupId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-group-target-from-group-role",
      "method": "DELETE",
      "url_pattern": "/api/v1/groups/:groupId/roles/:roleAssignmentId/targets/groups/:targetGroupId",
      "name": "Unassign a group role group target",
      "entity": "role_assignment",
      "operation": "unassign_group_target_from_group_role",
      "description": "Unassigns a Group target from a `USER_ADMIN`, `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to a group.",
      "folder_path": "Group Role Targets",
      "parameters": {
        "required": [
          "groupId",
          "roleAssignmentId",
          "targetGroupId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-app-targets-for-client-role",
      "method": "GET",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId/targets/catalog/apps",
      "name": "List all client role app targets",
      "entity": "role_assignment",
      "operation": "list_app_targets_for_client_role",
      "description": "Lists all OIN app targets for an `APP_ADMIN` role that's assigned to a client (by `clientId`).",
      "folder_path": "Client Role Targets",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId"
        ],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "assign-app-target-to-client-role",
      "method": "PUT",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId/targets/catalog/apps/:appName",
      "name": "Assign a client role app target",
      "entity": "role_assignment",
      "operation": "assign_app_target_to_client_role",
      "description": "Assigns an OIN app target for an `APP_ADMIN` role assignment to a client. When you assign an app target from the OIN catalog, you reduce the scope of the role assignment.\nThe role assignment applies to only app instances that are included in the specified OIN app target.\n\nAn assigned OIN app target overrides any existing app instance targets.\nFor example, if a user is assigned to administer a specific Facebook instance, a successful request to add an OIN app target with `facebook` for `appName` makes that user the administrator for all Facebook instances.",
      "folder_path": "Client Role Targets",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId",
          "appName"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-app-target-from-client-role",
      "method": "DELETE",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId/targets/catalog/apps/:appName",
      "name": "Unassign a client role app target",
      "entity": "role_assignment",
      "operation": "unassign_app_target_from_client_role",
      "description": "Unassigns an OIN app target for a role assignment to a client app\n\n> **Note:** You can't remove the last OIN app target from a role assignment.\n> If you need a role assignment that applies to all apps, delete the role assignment with the target and create another one. See [Unassign a client role](/openapi/okta-management/management/tag/RoleAssignmentClient/#tag/RoleAssignmentClient/operation/deleteRoleFromClient).",
      "folder_path": "Client Role Targets",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId",
          "appName"
        ],
        "optional": []
      }
    },
    {
      "id": "assign-app-instance-target-to-client-role",
      "method": "PUT",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId/targets/catalog/apps/:appName/:appId",
      "name": "Assign a client role app instance target",
      "entity": "role_assignment",
      "operation": "assign_app_instance_target_to_client_role",
      "description": "Assigns an app instance target to an `APP_ADMIN` role assignment to a client. When you assign the first OIN app or app instance target, you reduce the scope of the role assignment.\nThe role no longer applies to all app targets, but applies only to the specified target.\n\n> **Note:** You can target a mixture of both OIN app and app instance targets, but you can't assign permissions to manage all instances of an OIN app and then assign a subset of permissions to the same app.\nFor example, you can't specify that an admin has access to manage all instances of the Salesforce app and then also manage only specific configurations of the Salesforce app.",
      "folder_path": "Client Role Targets",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId",
          "appName",
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-app-instance-target-from-client-role",
      "method": "DELETE",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId/targets/catalog/apps/:appName/:appId",
      "name": "Unassign a client role app instance target",
      "entity": "role_assignment",
      "operation": "unassign_app_instance_target_from_client_role",
      "description": "Unassigns an app instance target from a role assignment to a client app\n\n> **Note:** You can't remove the last app instance target from a role assignment.\n> If you need a role assignment that applies to all the apps, delete the role assignment with the instance target and create another one.  See [Unassign a client role](/openapi/okta-management/management/tag/RoleAssignmentClient/#tag/RoleAssignmentClient/operation/deleteRoleFromClient).",
      "folder_path": "Client Role Targets",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId",
          "appName",
          "appId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-group-targets-for-client-role",
      "method": "GET",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId/targets/groups",
      "name": "List all client role group targets",
      "entity": "role_assignment",
      "operation": "list_group_targets_for_client_role",
      "description": "Lists all group targets for a [`USER_ADMIN`](/openapi/okta-management/guides/roles/#standard-roles), `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to a client. If the role isn't scoped to specific group targets, Okta returns an empty array `[]`.",
      "folder_path": "Client Role Targets",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId"
        ],
        "optional": [
          "after",
          "limit"
        ]
      }
    },
    {
      "id": "assign-group-target-to-client-role",
      "method": "PUT",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId/targets/groups/:groupId",
      "name": "Assign a client role group target",
      "entity": "role_assignment",
      "operation": "assign_group_target_to_client_role",
      "description": "Assigns a group target to a [`USER_ADMIN`](/openapi/okta-management/guides/roles/#standard-roles), `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to a client app. When you assign the first group target, you reduce the scope of the role assignment. The role no longer applies to all targets, but applies only to the specified target.",
      "folder_path": "Client Role Targets",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId",
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "unassign-group-target-from-client-role",
      "method": "DELETE",
      "url_pattern": "/oauth2/v1/clients/:clientId/roles/:roleAssignmentId/targets/groups/:groupId",
      "name": "Unassign a client role group target",
      "entity": "role_assignment",
      "operation": "unassign_group_target_from_client_role",
      "description": "Unassigns a Group target from a `USER_ADMIN`, `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to a client app.\n\n> **Note:** You can't remove the last group target from a role assignment. If you need a role assignment that applies to all groups, delete the role assignment with the target and create another one. See [Unassign a client role](/openapi/okta-management/management/tag/RoleAssignmentClient/#tag/RoleAssignmentClient/operation/deleteRoleFromClient).",
      "folder_path": "Client Role Targets",
      "parameters": {
        "required": [
          "clientId",
          "roleAssignmentId",
          "groupId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-resource-sets",
      "method": "GET",
      "url_pattern": "/api/v1/iam/resource-sets",
      "name": "List all resource sets",
      "entity": "resource_set",
      "operation": "list",
      "description": "Lists all resource sets with pagination support",
      "folder_path": "Resource Sets",
      "parameters": {
        "required": [],
        "optional": [
          "after"
        ]
      }
    },
    {
      "id": "create-resource-set",
      "method": "POST",
      "url_pattern": "/api/v1/iam/resource-sets",
      "name": "Create a resource set",
      "entity": "resource_set",
      "operation": "create",
      "description": "Creates a new resource set. See [Supported resources](/openapi/okta-management/guides/roles/#supported-resources).\n\n> **Note:** The maximum number of `resources` allowed in a resource set object is 1000. Resources are identified by either an Okta Resource Name (ORN) or by a REST URL format. See [Okta Resource Name](/openapi/okta-management/guides/roles/#okta-resource-name-orn).",
      "folder_path": "Resource Sets",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-resource-set",
      "method": "GET",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel",
      "name": "Retrieve a resource set",
      "entity": "resource_set",
      "operation": "get",
      "description": "Retrieves a resource set by `resourceSetIdOrLabel`",
      "folder_path": "Resource Sets",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-resource-set",
      "method": "PUT",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel",
      "name": "Replace a resource set",
      "entity": "resource_set",
      "operation": "replace",
      "description": "Replaces the label and description of a resource set",
      "folder_path": "Resource Sets",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-resource-set",
      "method": "DELETE",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel",
      "name": "Delete a resource set",
      "entity": "resource_set",
      "operation": "delete",
      "description": "Deletes a resource set by `resourceSetIdOrLabel`",
      "folder_path": "Resource Sets",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "list-resource-set-resources",
      "method": "GET",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/resources",
      "name": "List all resource set resources",
      "entity": "resource_set",
      "operation": "list_resources",
      "description": "Lists all resources for the resource set",
      "folder_path": "Resource Set Resources",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "add-resource-set-resource-with-conditions",
      "method": "POST",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/resources",
      "name": "Add a resource set resource with conditions",
      "entity": "resource_set",
      "operation": "add_resource",
      "description": "Adds a resource with conditions for a resource set",
      "folder_path": "Resource Set Resources",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "patch-resource-set-resources",
      "method": "PATCH",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/resources",
      "name": "Add more resources to a resource set",
      "entity": "resource_set",
      "operation": "add_resource",
      "description": "Adds more resources to a resource set",
      "folder_path": "Resource Set Resources",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "get-resource-set-resource",
      "method": "GET",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/resources/:resourceId",
      "name": "Retrieve a resource set resource",
      "entity": "resource_set",
      "operation": "get_resource",
      "description": "Retrieves a resource identified by `resourceId` in a resource set",
      "folder_path": "Resource Set Resources",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel",
          "resourceId"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-resource-set-resource-conditions",
      "method": "PUT",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/resources/:resourceId",
      "name": "Replace the resource set resource conditions",
      "entity": "resource_set",
      "operation": "replace_resource_conditions",
      "description": "Replaces the conditions of a resource identified by `resourceId` in a resource set",
      "folder_path": "Resource Set Resources",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel",
          "resourceId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-resource-set-resource",
      "method": "DELETE",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/resources/:resourceId",
      "name": "Delete a resource set resource",
      "entity": "resource_set",
      "operation": "delete_resource",
      "description": "Deletes a resource (identified by `resourceId`) from a resource set",
      "folder_path": "Resource Set Resources",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel",
          "resourceId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-resource-set-bindings",
      "method": "GET",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/bindings",
      "name": "List all role resource set bindings",
      "entity": "resource_set",
      "operation": "list_bindings",
      "description": "Lists all bindings for a resource set with pagination support.\n\nThe returned `roles` array contains the roles for each binding associated with the specified resource set. If there are more than 100 bindings for the specified resource set, `links.next` provides the resource with pagination for the next list of bindings.",
      "folder_path": "Role Resource Set Bindings",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel"
        ],
        "optional": [
          "after"
        ]
      }
    },
    {
      "id": "create-resource-set-binding",
      "method": "POST",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/bindings",
      "name": "Create a role resource set binding",
      "entity": "resource_set",
      "operation": "create_binding",
      "description": "Creates a binding for the resource set, custom role, and members (users or groups)",
      "folder_path": "Role Resource Set Bindings",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "get-resource-set-binding",
      "method": "GET",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/bindings/:roleIdOrLabel",
      "name": "Retrieve a role resource set binding",
      "entity": "resource_set",
      "operation": "get_binding",
      "description": "Retrieves the binding of a role (identified by `roleIdOrLabel`) for a resource set (identified by `resourceSetIdOrLabel`)",
      "folder_path": "Role Resource Set Bindings",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel",
          "roleIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-resource-set-binding",
      "method": "DELETE",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/bindings/:roleIdOrLabel",
      "name": "Delete a role resource set binding",
      "entity": "resource_set",
      "operation": "delete_binding",
      "description": "Deletes a binding of a role (identified by `roleIdOrLabel`) and a resource set (identified by `resourceSetIdOrLabel`)",
      "folder_path": "Role Resource Set Bindings",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel",
          "roleIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "list-resource-set-binding-members",
      "method": "GET",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/bindings/:roleIdOrLabel/members",
      "name": "List all role resource set binding members",
      "entity": "resource_set",
      "operation": "list_binding_members",
      "description": "Lists all members of a role resource set binding with pagination support",
      "folder_path": "Role Resource Set Binding Members",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel",
          "roleIdOrLabel"
        ],
        "optional": [
          "after"
        ]
      }
    },
    {
      "id": "add-resource-set-binding-members",
      "method": "PATCH",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/bindings/:roleIdOrLabel/members",
      "name": "Add more role resource set binding members",
      "entity": "resource_set",
      "operation": "add_binding_members",
      "description": "Adds more members to a role resource set binding",
      "folder_path": "Role Resource Set Binding Members",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel",
          "roleIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "get-resource-set-binding-member",
      "method": "GET",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/bindings/:roleIdOrLabel/members/:memberId",
      "name": "Retrieve a role resource set binding member",
      "entity": "resource_set",
      "operation": "get_binding_member",
      "description": "Retrieves a member (identified by `memberId`) that belongs to a role resource set binding",
      "folder_path": "Role Resource Set Binding Members",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel",
          "roleIdOrLabel",
          "memberId"
        ],
        "optional": []
      }
    },
    {
      "id": "remove-resource-set-binding-member",
      "method": "DELETE",
      "url_pattern": "/api/v1/iam/resource-sets/:resourceSetIdOrLabel/bindings/:roleIdOrLabel/members/:memberId",
      "name": "Unassign a role resource set binding member",
      "entity": "resource_set",
      "operation": "remove_binding_member",
      "description": "Unassigns a member (identified by `memberId`) from a role resource set binding",
      "folder_path": "Role Resource Set Binding Members",
      "parameters": {
        "required": [
          "resourceSetIdOrLabel",
          "roleIdOrLabel",
          "memberId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-custom-roles",
      "method": "GET",
      "url_pattern": "/api/v1/iam/roles",
      "name": "List all custom roles",
      "entity": "custom_role",
      "operation": "list",
      "description": "Lists all custom roles with pagination support",
      "folder_path": "Custom Roles",
      "parameters": {
        "required": [],
        "optional": [
          "after"
        ]
      }
    },
    {
      "id": "create-custom-role",
      "method": "POST",
      "url_pattern": "/api/v1/iam/roles",
      "name": "Create a custom role",
      "entity": "custom_role",
      "operation": "create",
      "description": "Creates a custom role",
      "folder_path": "Custom Roles",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "get-custom-role",
      "method": "GET",
      "url_pattern": "/api/v1/iam/roles/:roleIdOrLabel",
      "name": "Retrieve a role",
      "entity": "custom_role",
      "operation": "get",
      "description": "Retrieves a role by `roleIdOrLabel`",
      "folder_path": "Custom Roles",
      "parameters": {
        "required": [
          "roleIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-custom-role",
      "method": "PUT",
      "url_pattern": "/api/v1/iam/roles/:roleIdOrLabel",
      "name": "Replace a custom role",
      "entity": "custom_role",
      "operation": "replace",
      "description": "Replaces the label and description for a custom role by `roleIdOrLabel`",
      "folder_path": "Custom Roles",
      "parameters": {
        "required": [
          "roleIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-custom-role",
      "method": "DELETE",
      "url_pattern": "/api/v1/iam/roles/:roleIdOrLabel",
      "name": "Delete a custom role",
      "entity": "custom_role",
      "operation": "delete",
      "description": "Deletes a custom role by `roleIdOrLabel`",
      "folder_path": "Custom Roles",
      "parameters": {
        "required": [
          "roleIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "list-custom-role-permissions",
      "method": "GET",
      "url_pattern": "/api/v1/iam/roles/:roleIdOrLabel/permissions",
      "name": "List all custom role permissions",
      "entity": "custom_role",
      "operation": "list_permissions",
      "description": "Lists all permissions for a custom role by `roleIdOrLabel`",
      "folder_path": "Custom Role Permissions",
      "parameters": {
        "required": [
          "roleIdOrLabel"
        ],
        "optional": []
      }
    },
    {
      "id": "get-custom-role-permission",
      "method": "GET",
      "url_pattern": "/api/v1/iam/roles/:roleIdOrLabel/permissions/:permissionType",
      "name": "Retrieve a custom role permission",
      "entity": "custom_role",
      "operation": "get_permission",
      "description": "Retrieves a permission (identified by `permissionType`) for a custom role",
      "folder_path": "Custom Role Permissions",
      "parameters": {
        "required": [
          "roleIdOrLabel",
          "permissionType"
        ],
        "optional": []
      }
    },
    {
      "id": "add-permission-to-custom-role",
      "method": "POST",
      "url_pattern": "/api/v1/iam/roles/:roleIdOrLabel/permissions/:permissionType",
      "name": "Create a custom role permission",
      "entity": "custom_role",
      "operation": "add_permission",
      "description": "Creates a permission (specified by `permissionType`) for a custom role",
      "folder_path": "Custom Role Permissions",
      "parameters": {
        "required": [
          "roleIdOrLabel",
          "permissionType"
        ],
        "optional": []
      }
    },
    {
      "id": "replace-custom-role-permission",
      "method": "PUT",
      "url_pattern": "/api/v1/iam/roles/:roleIdOrLabel/permissions/:permissionType",
      "name": "Replace a custom role permission",
      "entity": "custom_role",
      "operation": "replace_permission",
      "description": "Replaces a permission (specified by `permissionType`) for a custom role",
      "folder_path": "Custom Role Permissions",
      "parameters": {
        "required": [
          "roleIdOrLabel",
          "permissionType"
        ],
        "optional": []
      }
    },
    {
      "id": "remove-permission-from-custom-role",
      "method": "DELETE",
      "url_pattern": "/api/v1/iam/roles/:roleIdOrLabel/permissions/:permissionType",
      "name": "Delete a custom role permission",
      "entity": "custom_role",
      "operation": "remove_permission",
      "description": "Deletes a permission (identified by `permissionType`) from a custom role",
      "folder_path": "Custom Role Permissions",
      "parameters": {
        "required": [
          "roleIdOrLabel",
          "permissionType"
        ],
        "optional": []
      }
    },
    {
      "id": "list-system-log-events",
      "method": "GET",
      "url_pattern": "/api/v1/logs",
      "name": "List all System Log events",
      "entity": "system_log",
      "operation": "list_events",
      "description": "## Critical Parameters\n*   **`filter`** (String - A SCIM-like filter expression):\n    *   This is the most powerful parameter for narrowing down results. Always use it to specify the `eventType`.\n    *   **Syntax**: The filter value itself is a string where event type values must be enclosed in double quotes. Example: `eventType eq \"user.session.start\"`.\n    *   **Combining filters**: Use `and` or `or` for complex queries. For example: `eventType eq \"user.session.start\" or eventType eq \"user.mfa.factor.activate\"`\n\n*   **`since`** & **`until`** (String - ISO 8601 timestamp):\n    *   Used to define a time window for the query.\n    *   Example: `since=2024-07-25T00:00:00.000Z&until=2024-07-26T00:00:00.000Z`\n\n## Common `eventType` Filters\n*   **User Login & Session**:\n    *   `eventType eq \"user.session.start\"` (Successful user login)\n    *   `eventType eq \"user.authentication.sso\"` (User accessing an app via SSO)\n    *   `eventType eq \"user.authentication.auth_via_mfa\"` (User successfully completed an MFA challenge)\n    *   `eventType eq \"user.session.end\"` (User logged out)\n\n*   **User Account Activity**:\n    *   `eventType eq \"user.lifecycle.create\"` (User account created)\n    *   `eventType eq \"user.lifecycle.activate\"` (User account activated)\n    *   `eventType eq \"user.lifecycle.deactivate\"` (User account deactivated)\n    *   `eventType eq \"user.account.privilege.grant\"` (Admin privileges granted to a user)\n\n*   **MFA & Password Events**:\n    *   `eventType eq \"user.mfa.factor.update\"` (User changed MFA factors)\n    *   `eventType eq \"system.mfa.factor.deactivate\"` (An admin disabled an MFA factor)\n    *   `eventType eq \"user.account.reset_password\"` (User password reset by an admin)\n\n## Example Query\nTo find all successful logins and SSO events within a specific time window, the query parameters would look like this:\n`?since=2024-07-26T12:00:00.000Z&limit=1000&filter=(eventType eq \"user.session.start\" or eventType eq \"user.authentication.sso\")`",
      "folder_path": "System Log",
      "parameters": {
        "required": ["limit"],
        "optional": [
          "since",
          "until",
          "after",
          "filter",
          "q",
          "sortOrder"
        ]
      }
    },
    {
      "id": "list-users",
      "method": "GET",
      "url_pattern": "/api/v1/users",
      "name": "List all users",
      "entity": "user",
      "operation": "list",
      "description": "Lists users in your org, with pagination in most cases.\n\nA subset of users can be returned that match a supported filter expression or search criteria. Different results are returned depending on specified queries in the request.\n\n> **Note:** This operation omits users that have a status of `DEPROVISIONED` in the response. To return all users, use a filter or search query instead.",
      "folder_path": "Users",
      "parameters": {
        "required": [],
        "optional": [
          "search",
          "filter",
          "q",
          "after",
          "limit",
          "sortBy",
          "sortOrder",
          "expand"
        ]
      }
    },
    {
      "id": "create-user",
      "method": "POST",
      "url_pattern": "/api/v1/users",
      "name": "Create a user",
      "entity": "user",
      "operation": "create",
      "description": "Creates a new user in your Okta org with or without credentials.<br>\n> **Legal Disclaimer**\n>\n> After a user is added to the Okta directory, they receive an activation email. As part of signing up for this service,\n> you agreed not to use Okta's service/product to spam and/or send unsolicited messages.\n> Please refrain from adding unrelated accounts to the directory as Okta is not responsible for, and disclaims any and all\n> liability associated with, the activation email's content. You, and you alone, bear responsibility for the emails sent to any recipients.\n\nAll responses return the created user. Activation of a user is an asynchronous operation. The system performs group reconciliation during activation and assigns the user to all apps via direct or indirect relationships (group memberships).\n* The user's `transitioningToStatus` property is `ACTIVE` during activation to indicate that the user hasn't completed the asynchronous operation.\n* The user's `status` is `ACTIVE` when the activation process is complete.\n\nThe user is emailed a one-time activation token if activated without a password.\n\n> **Note:** If the user is assigned to an app that is configured for provisioning, the activation process triggers downstream provisioning to the app.  It is possible for a user to sign in before these apps have been successfully provisioned for the user.\n\n> **Important:** Do not generate or send a one-time activation token when activating users with an assigned password. Users should sign in with their assigned password.\n\nFor more information about the various scenarios of creating a user listed in the examples, see the [User creation scenarios](/openapi/okta-management/management/tag/User/#user-creation-scenarios) section.",
      "folder_path": "Users",
      "parameters": {
        "required": [],
        "optional": [
          "activate",
          "provider",
          "nextLogin"
        ]
      }
    },
    {
      "id": "get-user",
      "method": "GET",
      "url_pattern": "/api/v1/users/:id",
      "name": "Retrieve a user",
      "entity": "user",
      "operation": "get",
      "description": "Retrieves a user from your Okta org.\n\nYou can substitute `me` for the `id` to fetch the current user linked to an API token or session cookie.\n * The request returns the user linked to the API token that is specified in the Authorization header, not the user linked to the active session. Details of the admin user who granted the API token is returned.\n * When the end user has an active Okta session, it is typically a CORS request from the browser. Therefore, it's possible to retrieve the current user without the Authorization header.\n\nWhen fetching a user by `login` or `login shortname`, [URL encode](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) the request parameter to ensure that special characters are escaped properly. Logins with a `/` character can only be fetched by `id` due to URL issues with escaping the `/` character. If you don't know a user's ID, you can use the [List all users](/openapi/okta-management/management/tag/User/#tag/User/operation/listUsers) endpoint to find it.\n\n> **Note:** Some browsers block third-party cookies by default, which disrupts Okta functionality in certain flows. See [Mitigate the impact of third-party cookie deprecation](https://help.okta.com/okta_help.htm?type=oie&id=ext-third-party-cookies).",
      "folder_path": "Users",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": [
          "expand"
        ]
      }
    },
    {
      "id": "update-user",
      "method": "POST",
      "url_pattern": "/api/v1/users/:id",
      "name": "Update a user",
      "entity": "user",
      "operation": "update",
      "description": "Updates a user's profile or credentials with partial update semantics.\n\n> **Important:** Use the `POST` method for partial updates. Unspecified properties are set to null with `PUT`.\n\n`profile` and `credentials` can be updated independently or together with a single request.\n> **Note**: Currently, the user type of a user can only be changed via a full replacement PUT operation. If the request parameters of a partial update include the type element from the user object,\nthe value must match the existing type of the user. Only admins are permitted to change the user type of a user; end users are not allowed to change their own user type.\n\n> **Note**: To update a current user's profile with partial semantics, the `/api/v1/users/me` endpoint can be invoked.\n>\n> A user can only update profile properties for which the user has write access. Within the profile, if the user tries to update the primary or the secondary email IDs, verification emails are sent to those email IDs, and the fields are updated only upon verification.\n\nIf you are using this endpoint to set a password, it sets a password without validating existing user credentials. This is an administrative operation. For operations that validate credentials, refer to the [Reset password](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserCred/#tag/UserCred/operation/resetPassword), [Start forgot password flow](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserCred/#tag/UserCred/operation/forgotPassword), and [Update password](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserCred/#tag/UserCred/operation/changePassword) endpoints.",
      "folder_path": "Users",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": [
          "strict"
        ]
      }
    },
    {
      "id": "replace-user",
      "method": "PUT",
      "url_pattern": "/api/v1/users/:id",
      "name": "Replace a user",
      "entity": "user",
      "operation": "replace",
      "description": "Replaces a user's profile, credentials, or both using strict-update semantics.\n\nAll profile properties must be specified when updating a user's profile with a `PUT` method. Any property not specified in the request is deleted.\n> **Important:** Don't use a `PUT` method for partial updates.",
      "folder_path": "Users",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": [
          "strict"
        ]
      }
    },
    {
      "id": "delete-user",
      "method": "DELETE",
      "url_pattern": "/api/v1/users/:id",
      "name": "Delete a user",
      "entity": "user",
      "operation": "delete",
      "description": "Deletes a user permanently. This operation can only be performed on users that have a `DEPROVISIONED` status.\n\n> **Warning:** This action can't be recovered!\n\nThis operation on a user that hasn't been deactivated causes that user to be deactivated. A second delete operation is required to delete the user.\n\n> **Note:** You can also perform user deletion asynchronously. To invoke asynchronous user deletion, pass an HTTP header `Prefer: respond-async` with the request.\n\nThis header is also supported by user deactivation, which is performed if the delete endpoint is invoked on a user that hasn't been deactivated.",
      "folder_path": "Users",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": [
          "sendEmail"
        ]
      }
    },
    {
      "id": "list-user-blocks",
      "method": "GET",
      "url_pattern": "/api/v1/users/:id/blocks",
      "name": "List all user blocks",
      "entity": "user",
      "operation": "list_blocks",
      "description": "Lists information about how the user is blocked from accessing their account",
      "folder_path": "Users",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": []
      }
    },
    {
      "id": "list-user-authenticator-enrollments",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/authenticator-enrollments",
      "name": "List all authenticator enrollments",
      "entity": "user_authenticator",
      "operation": "list_enrollments",
      "description": "Lists all authenticator enrollments of the specified user",
      "folder_path": "User Authenticator Enrollments",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "enroll-phone-authenticator",
      "method": "POST",
      "url_pattern": "/api/v1/users/:userId/authenticator-enrollments/phone",
      "name": "Create an auto-activated Phone authenticator enrollment",
      "entity": "user_authenticator",
      "operation": "enroll_phone",
      "description": "Creates a Phone authenticator enrollment that's automatically activated",
      "folder_path": "User Authenticator Enrollments",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-authenticator-enrollment",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/authenticator-enrollments/:enrollmentId",
      "name": "Retrieve an authenticator enrollment",
      "entity": "user_authenticator",
      "operation": "get_enrollment",
      "description": "Retrieves a user's authenticator enrollment by `enrollmentId`",
      "folder_path": "User Authenticator Enrollments",
      "parameters": {
        "required": [
          "userId",
          "enrollmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "delete-authenticator-enrollment",
      "method": "DELETE",
      "url_pattern": "/api/v1/users/:userId/authenticator-enrollments/:enrollmentId",
      "name": "Delete an authenticator enrollment",
      "entity": "user_authenticator",
      "operation": "delete_enrollment",
      "description": "Deletes an existing enrollment for the specified user. The user can enroll the authenticator again.",
      "folder_path": "User Authenticator Enrollments",
      "parameters": {
        "required": [
          "userId",
          "enrollmentId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-yubikey-tokens",
      "method": "GET",
      "url_pattern": "/api/v1/org/factors/yubikey_token/tokens",
      "name": "List all YubiKey OTP tokens",
      "entity": "user_authenticator",
      "operation": "list_yubikey_tokens",
      "description": "Lists all YubiKey OTP tokens",
      "folder_path": "User Factors",
      "parameters": {
        "required": [],
        "optional": [
          "after",
          "expand",
          "filter",
          "forDownload",
          "limit",
          "sortBy",
          "sortOrder"
        ]
      }
    },
    {
      "id": "upload-yubikey-seed",
      "method": "POST",
      "url_pattern": "/api/v1/org/factors/yubikey_token/tokens",
      "name": "Upload a YubiKey OTP seed",
      "entity": "user_authenticator",
      "operation": "upload_yubikey_seed",
      "description": "Uploads a seed for a user to enroll a YubiKey OTP",
      "folder_path": "User Factors",
      "parameters": {
        "required": [],
        "optional": [
          "after",
          "expand",
          "filter",
          "forDownload",
          "limit",
          "sortBy",
          "sortOrder"
        ]
      }
    },
    {
      "id": "get-yubikey-token",
      "method": "GET",
      "url_pattern": "/api/v1/org/factors/yubikey_token/tokens/:tokenId",
      "name": "Retrieve a YubiKey OTP token",
      "entity": "user_authenticator",
      "operation": "get_yubikey_token",
      "description": "Retrieves the specified YubiKey OTP token by `id`",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "tokenId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-user-factors",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/factors",
      "name": "List all enrolled factors",
      "entity": "user_authenticator",
      "operation": "list_factors",
      "description": "Lists all enrolled factors for the specified user that are included in the highest priority [authenticator enrollment policy](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/) that applies to the user.\n\nOnly enrolled factors that are `REQUIRED` or `OPTIONAL` in the highest priority authenticator enrollment policy can be returned.\n\n> **Note:** When admins use this endpoint for other users, the authenticator enrollment policy that's evaluated can vary depending on how client-specific conditions are configured in the rules of an authenticator enrollment policy. The client-specific conditions of the admin's client are used during policy evaluation instead of the client-specific conditions of the user. This can affect which authenticator enrollment policy is evaluated and which factors are returned.\n>\n> For example, an admin in Europe lists all enrolled factors for a user in North America. The network zone of the admin's client (in Europe) is used during policy evaluation instead of the network zone of the user (in North America).",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "enroll-factor",
      "method": "POST",
      "url_pattern": "/api/v1/users/:userId/factors",
      "name": "Enroll a factor",
      "entity": "user_authenticator",
      "operation": "enroll_factor",
      "description": "Enrolls a supported factor for the specified user\n\n> **Notes:** \n>   * All responses return the enrolled factor with a status of either `PENDING_ACTIVATION` or `ACTIVE`.\n>   * You can't use the Factors API to enroll Okta Fastpass (`signed_nonce`) for a user. See [Configure Okta Fastpass](https://help.okta.com/okta_help.htm?type=oie&id=ext-fp-configure).\n\n#### Additional SMS/Call factor information\n\n* **Rate limits**: Okta may return a `429 Too Many Requests` status code if you attempt to resend an SMS or a voice call challenge (OTP) within the same time window. The current [rate limit](https://developer.okta.com/docs/reference/rate-limits/) is one SMS/CALL challenge per phone number every 30 seconds.\n\n* **Existing phone numbers**: Okta may return a `400 Bad Request` status code if a user attempts to enroll with a different phone number when the user has an existing mobile phone or has an existing phone with voice call capability. A user can enroll only one mobile phone for `sms` and enroll only one voice call capable phone for `call` factor.\n\n#### Additional WebAuthn factor information\n\n* For detailed information on the WebAuthn standard, including an up-to-date list of supported browsers, see [webauthn.me](https://a0.to/webauthnme-okta-docs).\n\n* When you enroll a WebAuthn factor, the `activation` object in `_embedded` contains properties used to help the client to create a new WebAuthn credential for use with Okta. See the [WebAuthn spec for PublicKeyCredentialCreationOptions](https://www.w3.org/TR/webauthn/#dictionary-makecredentialoptions).\n\n#### Additional Custom TOTP factor information\n\n* The enrollment process involves passing both the `factorProfileId` and `sharedSecret` properties for a token.\n\n* A factor profile represents a particular configuration of the Custom TOTP factor. It includes certain properties that match the hardware token that end users possess, such as the HMAC algorithm, passcode length, and time interval. There can be multiple Custom TOTP factor profiles per org, but users can only enroll in one Custom TOTP factor. Admins can [create Custom TOTP factor profiles](https://help.okta.com/okta_help.htm?id=ext-mfa-totp) in the Admin Console. Then, copy the `factorProfileId` from the Admin Console into the API request.\n\n* <x-lifecycle class=\"oie\"></x-lifecycle>\nFor Custom TOTP enrollment, Okta automaticaly enrolls a user with a `token:software:totp` factor and the `push` factor if the user isn't currently enrolled with these factors.",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": [
          "updatePhone",
          "templateId",
          "tokenLifetimeSeconds",
          "activate"
        ]
      }
    },
    {
      "id": "list-supported-factors",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/factors/catalog",
      "name": "List all supported factors",
      "entity": "user_authenticator",
      "operation": "list_supported_factors",
      "description": "Lists all the supported factors that can be enrolled for the specified user that are included in the highest priority [authenticator enrollment policy](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/) that applies to the user.\n\nOnly factors that are `REQUIRED` or `OPTIONAL` in the highest priority authenticator enrollment policy can be returned.\n\n> **Note:** When admins use this endpoint for other users, the authenticator enrollment policy that's evaluated can vary depending on how client-specific conditions are configured in the rules of an authenticator enrollment policy. The client-specific conditions of the admin's client are used during policy evaluation instead of the client-specific conditions of the user. This can affect which authenticator enrollment policy is evaluated and which factors are returned.\n>\n> For example, an admin in Europe lists all supported factors for a user in North America. The network zone of the admin's client (in Europe) is used during policy evaluation instead of the network zone of the user (in North America).",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-supported-security-questions",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/factors/questions",
      "name": "List all supported security questions",
      "entity": "user_authenticator",
      "operation": "list_supported_security_questions",
      "description": "Lists all available security questions for the specified user",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "get-user-factor",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/factors/:factorId",
      "name": "Retrieve a factor",
      "entity": "user_authenticator",
      "operation": "get_factor",
      "description": "Retrieves an existing factor for the specified user",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId",
          "factorId"
        ],
        "optional": []
      }
    },
    {
      "id": "unenroll-factor",
      "method": "DELETE",
      "url_pattern": "/api/v1/users/:userId/factors/:factorId",
      "name": "Unenroll a factor",
      "entity": "user_authenticator",
      "operation": "unenroll_factor",
      "description": "Unenrolls an existing factor for the specified user. You can't unenroll a factor from a deactivated user. Unenrolling a factor allows the user to enroll a new factor.\n\n> **Note:** If you unenroll the `push` or the `signed_nonce` factors, Okta also unenrolls any other `totp`, `signed_nonce`, or Okta Verify `push` factors associated with the user.",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId",
          "factorId"
        ],
        "optional": [
          "removeRecoveryEnrollment"
        ]
      }
    },
    {
      "id": "activate-factor",
      "method": "POST",
      "url_pattern": "/api/v1/users/:userId/factors/:factorId/lifecycle/activate",
      "name": "Activate a factor",
      "entity": "user_authenticator",
      "operation": "activate_factor",
      "description": "Activates a factor. Some factors (`call`, `email`, `push`, `sms`, `token:software:totp`, `u2f`, and `webauthn`) require activation to complete the enrollment process.\n\nOkta enforces a rate limit of five activation attempts within five minutes. After a user exceeds the rate limit, Okta returns an error message.\n\n> **Notes:** \n> * If the user exceeds their SMS, call, or email factor activation rate limit, then an [OTP resend request](./#tag/UserFactor/operation/resendEnrollFactor) isn't allowed for the same factor.\n> * You can't use the Factors API to activate Okta Fastpass (`signed_nonce`) for a user. See [Configure Okta Fastpass](https://help.okta.com/okta_help.htm?type=oie&id=ext-fp-configure).",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId",
          "factorId"
        ],
        "optional": []
      }
    },
    {
      "id": "resend-factor-enrollment",
      "method": "POST",
      "url_pattern": "/api/v1/users/:userId/factors/:factorId/resend",
      "name": "Resend a factor enrollment",
      "entity": "user_authenticator",
      "operation": "resend_factor_enrollment",
      "description": "Resends an `sms`, `call`, or `email` factor challenge as part of an enrollment flow.\n\nFor `call` and `sms` factors, Okta enforces a rate limit of one OTP challenge per device every 30 seconds. You can configure your `sms` and `call` factors to use a third-party telephony provider. See the [Telephony inline hook reference](https://developer.okta.com/docs/reference/telephony-hook/). Okta alternates between SMS providers with every resend request to ensure delivery of SMS and Call OTPs across different carriers.\n\n> **Note:** Resend operations aren't allowed after a factor exceeds the activation rate limit. See [Activate a factor](./#tag/UserFactor/operation/activateFactor).",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId",
          "factorId"
        ],
        "optional": [
          "templateId"
        ]
      }
    },
    {
      "id": "get-factor-transaction-status",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/factors/:factorId/transactions/:transactionId",
      "name": "Retrieve a factor transaction status",
      "entity": "user_authenticator",
      "operation": "get_factor_transaction_status",
      "description": "Retrieves the status of a `push` factor verification transaction\n\n > **Note:**\n > The response body for a number matching push challenge to an Okta Verify `push` factor enrollment is different from the response body of a standard push challenge. \n > The number matching push challenge [response body](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/getFactorTransactionStatus!c=200&path=1/_embedded&t=response) contains the correct answer for the challenge.\n > Use [Verify a factor](/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/verifyFactor) to configure which challenge is sent.",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId",
          "factorId",
          "transactionId"
        ],
        "optional": []
      }
    },
    {
      "id": "verify-factor",
      "method": "POST",
      "url_pattern": "/api/v1/users/:userId/factors/:factorId/verify",
      "name": "Verify a factor",
      "entity": "user_authenticator",
      "operation": "verify_factor",
      "description": "Verifies an OTP for a factor. Some factors (`call`, `email`, `push`, `sms`, `u2f`, and `webauthn`) must first issue a challenge before you can verify the factor. Do this by making a request without a body. After a challenge is issued, make another request to verify the factor.\n\n> **Notes:**\n> - You can send standard push challenges or number matching push challenges to Okta Verify `push` factor enrollments. Use a [request body](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/verifyFactor!path=2/useNumberMatchingChallenge&t=request) for number matching push challenges. \n> - To verify a `push` factor, use the **poll** link returned when you issue the challenge. See [Retrieve a factor transaction status](/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/getFactorTransactionStatus).",
      "folder_path": "User Factors",
      "parameters": {
        "required": [
          "userId",
          "factorId"
        ],
        "optional": [
          "templateId",
          "tokenLifetimeSeconds"
        ]
      }
    },
    {
      "id": "activate-user",
      "method": "POST",
      "url_pattern": "/api/v1/users/:id/lifecycle/activate",
      "name": "Activate a user",
      "entity": "user",
      "operation": "activate",
      "description": "Activates a user.\n\nPerform this operation only on users with a `STAGED` or `DEPROVISIONED` status. Activation of a user is an asynchronous operation.\n* The user has the `transitioningToStatus` property with an `ACTIVE` value during activation. This indicates that the user hasn't completed the asynchronous operation.\n* The user has an `ACTIVE` status when the activation process completes.\n\nUsers who don't have a password must complete the welcome flow by visiting the activation link to complete the transition to `ACTIVE` status.\n\n> **Note:** If you want to send a branded user activation email, change the subdomain of your request to the custom domain that's associated with the brand.\n> For example, change `subdomain.okta.com` to `custom.domain.one`. See [Multibrand and custom domains](https://developer.okta.com/docs/concepts/brands/#multibrand-and-custom-domains).\n\n> **Note:** If you have optional password enabled, visiting the activation link is optional for users who aren't required to enroll a password.\n> See [Create user with optional password](/openapi/okta-management/management/tag/User/#create-user-with-optional-password).\n\n> **Legal disclaimer**\n> After a user is added to the Okta directory, they receive an activation email. As part of signing up for this service,\n> you agreed not to use Okta's service/product to spam and/or send unsolicited messages.\n> Please refrain from adding unrelated accounts to the directory as Okta is not responsible for, and disclaims any and all\n> liability associated with, the activation email's content. You, and you alone, bear responsibility for the emails sent to any recipients.",
      "folder_path": "User Lifecycle",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": [
          "sendEmail"
        ]
      }
    },
    {
      "id": "deactivate-user",
      "method": "POST",
      "url_pattern": "/api/v1/users/:id/lifecycle/deactivate",
      "name": "Deactivate a user",
      "entity": "user",
      "operation": "deactivate",
      "description": "Deactivates a user.\n\nPerform this operation only on users that do not have a `DEPROVISIONED` status.\n* The user's `transitioningToStatus` property is `DEPROVISIONED` during deactivation to indicate that the user hasn't completed the asynchronous operation.\n* The user's status is `DEPROVISIONED` when the deactivation process is complete.\n\n> **Important:** Deactivating a user is a **destructive** operation. The user is deprovisioned from all assigned apps, which might destroy their data such as email or files.\n**This action cannot be recovered!**\n\nYou can also perform user deactivation asynchronously. To invoke asynchronous user deactivation, pass an HTTP header `Prefer: respond-async` with the request.",
      "folder_path": "User Lifecycle",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": [
          "sendEmail"
        ]
      }
    },
    {
      "id": "reactivate-user",
      "method": "POST",
      "url_pattern": "/api/v1/users/:id/lifecycle/reactivate",
      "name": "Reactivate a user",
      "entity": "user",
      "operation": "reactivate",
      "description": "Reactivates a user.\n\nPerform this operation only on users with a `PROVISIONED` or `RECOVERY` [status](/openapi/okta-management/management/tag/User/#tag/User/operation/listUsers!c=200&path=status&t=response).\nThis operation restarts the activation workflow if for some reason the user activation wasn't completed when using the `activationToken` from [Activate User](/openapi/okta-management/management/tag/UserLifecycle/#tag/UserLifecycle/operation/activateUser).\n\nUsers that don't have a password must complete the flow by completing the [Reset password](/openapi/okta-management/management/tag/UserCred/#tag/UserCred/operation/resetPassword) flow and MFA enrollment steps to transition the user to `ACTIVE` status.\n\nIf `sendEmail` is `false`, returns an activation link for the user to set up their account. The activation token can be used to create a custom activation link.",
      "folder_path": "User Lifecycle",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": [
          "sendEmail"
        ]
      }
    },
    {
      "id": "reset-user-factors",
      "method": "POST",
      "url_pattern": "/api/v1/users/:id/lifecycle/reset_factors",
      "name": "Reset the factors",
      "entity": "user",
      "operation": "reset_factors",
      "description": "Resets all factors for the specified user. All MFA factor enrollments return to the unenrolled state. The user's status remains `ACTIVE`. This link is present only if the user is currently enrolled in one or more MFA factors.",
      "folder_path": "User Lifecycle",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": []
      }
    },
    {
      "id": "suspend-user",
      "method": "POST",
      "url_pattern": "/api/v1/users/:id/lifecycle/suspend",
      "name": "Suspend a user",
      "entity": "user",
      "operation": "suspend",
      "description": "Suspends a user. Perform this operation only on users with an `ACTIVE` status. The user has a `SUSPENDED` status when the process completes.\n\nSuspended users can't sign in to Okta. They can only be unsuspended or deactivated. Their group and app assignments are retained.",
      "folder_path": "User Lifecycle",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": []
      }
    },
    {
      "id": "unlock-user",
      "method": "POST",
      "url_pattern": "/api/v1/users/:id/lifecycle/unlock",
      "name": "Unlock a user",
      "entity": "user",
      "operation": "unlock",
      "description": "Unlocks a user with a `LOCKED_OUT` status or unlocks a user with an `ACTIVE` status that's blocked from unknown devices. Unlocked users have an `ACTIVE` status and can sign in with their current password.\n> **Note:** This operation works with Okta-sourced users. It doesn't support directory-sourced accounts such as Active Directory.",
      "folder_path": "User Lifecycle",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": []
      }
    },
    {
      "id": "unsuspend-user",
      "method": "POST",
      "url_pattern": "/api/v1/users/:id/lifecycle/unsuspend",
      "name": "Unsuspend a user",
      "entity": "user",
      "operation": "unsuspend",
      "description": "Unsuspends a user and returns them to the `ACTIVE` state. This operation can only be performed on users that have a `SUSPENDED` status.",
      "folder_path": "User Lifecycle",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": []
      }
    },
    {
      "id": "list-user-app-links",
      "method": "GET",
      "url_pattern": "/api/v1/users/:id/appLinks",
      "name": "List all assigned app links",
      "entity": "user",
      "operation": "list_app_links",
      "description": "Lists all app links for all direct or indirect (through group membership) assigned apps.\n\n> **Note:** To list all apps in an org, use the [List all applications endpoint in the Applications API](/openapi/okta-management/management/tag/Application/#tag/Application/operation/listApplications).",
      "folder_path": "User Resources",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": []
      }
    },
    {
      "id": "list-user-groups",
      "method": "GET",
      "url_pattern": "/api/v1/users/:id/groups",
      "name": "List all groups",
      "entity": "user",
      "operation": "list_groups",
      "description": "Lists all groups of which the user is a member.\n> **Note:** To list all groups in your org, use the [List all groups endpoints in the Groups API](/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroups).",
      "folder_path": "User Resources",
      "parameters": {
        "required": [
          "id"
        ],
        "optional": []
      }
    },
    {
      "id": "list-user-clients",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/clients",
      "name": "List all clients",
      "entity": "user",
      "operation": "list_clients",
      "description": "Lists all client resources for which the specified user has grants or tokens.\n\n> **Note:** To list all client resources for which a specified authorization server has tokens, use the [List all client resources for an authorization server in the Authorization Servers API](/openapi/okta-management/management/tag/AuthorizationServerClients/#tag/AuthorizationServerClients/operation/listOAuth2ClientsForAuthorizationServer).",
      "folder_path": "User Resources",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "list-user-devices",
      "method": "GET",
      "url_pattern": "/api/v1/users/:userId/devices",
      "name": "List all devices",
      "entity": "user",
      "operation": "list_devices",
      "description": "Lists all devices enrolled by a user.\n\n> **Note:** To list all devices registered to an org, use the [List all devices endpoint in the Devices API](/openapi/okta-management/management/tag/Device/#tag/Device/operation/listDevices).",
      "folder_path": "User Resources",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": []
      }
    },
    {
      "id": "end-current-user-session",
      "method": "POST",
      "url_pattern": "/api/v1/users/me/lifecycle/delete_sessions",
      "name": "End a current user session",
      "entity": "user",
      "operation": "end_current_session",
      "description": "Ends Okta sessions for the currently signed in user. By default, the current session remains active. Use this method in a browser-based app.\n> **Note:** This operation requires a session cookie for the user. The API token isn't allowed for this operation.",
      "folder_path": "User Sessions",
      "parameters": {
        "required": [],
        "optional": []
      }
    },
    {
      "id": "revoke-all-user-sessions",
      "method": "DELETE",
      "url_pattern": "/api/v1/users/:userId/sessions",
      "name": "Revoke all user sessions",
      "entity": "user",
      "operation": "revoke_all_sessions",
      "description": "Revokes all active identity provider sessions of the user. This forces the user to authenticate on the next operation. Optionally revokes OpenID Connect and OAuth refresh and access tokens issued to the user.\n> **Note:** This operation doesn't clear the sessions created for web or native apps.",
      "folder_path": "User Sessions",
      "parameters": {
        "required": [
          "userId"
        ],
        "optional": [
          "oauthTokens"
        ]
      }
    }
  ]
}
